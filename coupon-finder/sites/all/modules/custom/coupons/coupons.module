<?php
//http://plugin.theshoppingpro.com/CouponAutoWebPhase2.php?q=http://shopping.indiatimes.com/fashion/dresses/styletoss-black-plain-women-dress-1538/10846/p_B1863455
//java -jar start.jar
//http://54.243.150.171/CouponAutoWebPhase2.php?q=http://www.jabong.com/Puma-917-Mid-20-Ind-Blue-Sneakers-362539.html
//http://54.243.150.171/CouponAutoWebPhase2.php?q=http://www.jabong.com/z-collection-Blue-Belly-Shoes-368804.html
//http://54.243.150.171/CouponAutoWebPhase2.php?q=www.jabong.com/people-Grey-Melange-Graphic-T-Shirt-362304.html
//http://54.243.150.171/CouponAutoWebPhase2.php?q=http://www.jabong.com/people-Ruffle-Sleeve-Off-White-Printed-Top-362324.html
function coupons_menu() {
  $items = array();

  $items['coupon-finder'] = array(//this creates a URL that will call this form at "examples/form-example"
      'title' => 'Coupon Finder', //page title
      'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
      'page arguments' => array('coupons_finder_form'), //put the name of the form here
      'access callback' => TRUE
  );

  $items['coupon-result/%'] = array(
      'title' => t(''),
      'page callback' => 'coupons_result',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );

  $items['coupon-redirect'] = array(
      'page callback' => 'coupons_redirect_interim_page',
      'page arguments' => array(),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );

  $items['coupons_viewdemo/%ctools_js'] = array(
      'page callback' => 'coupons_viewdemo',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );

  $items['copycoupon'] = array(
      'page callback' => 'coupons_copy_coupon',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['coupon-details-popup'] = array(
      'page callback' => 'coupon_details_popup',
      'access callback' => TRUE,
	  'page arguments' => array(),
      'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
* TO GERNERATE GUID
*/
 
 function getGUID(){
    if (function_exists('com_create_guid')){
        return com_create_guid();
    }else{
        mt_srand((double)microtime()*10000);//optional for php 4.2.0 and up.
        $charid = strtoupper(md5(uniqid(rand(), true)));
        $hyphen = chr(45);// "-"
        $uuid = substr($charid, 0, 8).$hyphen
            .substr($charid, 8, 4).$hyphen
            .substr($charid,12, 4).$hyphen
            .substr($charid,16, 4).$hyphen
            .substr($charid,20,12)
            ;
        return $uuid;
    }
}

/**
 * Implements hook_init
 */
 
 function coupons_init() {
	// this function required. please don't remove it until u are not aware fully.
	// set it to 600 second
	drupal_set_time_limit(600);
        if ($GLOBALS['_domain']['subdomain'] == 'offers.couponvoodoo.com') {
          drupal_add_css(drupal_get_path('theme', 'basic') . '/css/offers.css');
        }
	
}

function coupons_viewdemo($ajax) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');

    $form_state = array(
        'ajax' => TRUE,
        'title' => t('CouponVoodoo Demo'),
    );

    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('coupons_finder_form', $form_state);

    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  } else {
    return drupal_get_form('coupons_finder_form', true, true);
  }
}

function coupons_redirect_interim_page() {
	global $base_url;
	$url = $_GET['s']; // kept just to be safe in case nid is not found
	$coupon_code = $_GET['c'];
	/* MOVING REDIRECTION TO REDIRECT PAGE TO ENSURE THAT ALL PRODUCTS REDIRECT AS PER LATEST DATA AND NOT BASED ON STORED AFFILIATE URL VALUES */
	If (!empty($_GET['nid'])){
		$nid_redirect = $_GET['nid'];
		$node_redirect = node_load($nid_redirect);
		$retailer_id_redirect = strip_tags($node_redirect->field_retailer['und']['0'][tid]);
		if(empty($_GET['t'])){ // means this is not coming from coupon retailer page 
			$baseurl_redirect = strip_tags($node_redirect->field_base_url['und']['0']['value']);
			$coupon_status_track = strip_tags($node_redirect->field_best_coupon_status['und']['0']['value']);
		} else {
			if ($_GET['l']=='cpc'){ // identifying click on categories on the retailer coupon page 
				$baseurl_redirect = $_GET['s'];
				$coupon_status_track = 2;			
			} else { // identifying click on coupon / offer code  on the retailer coupon page 
				$baseurl_redirect = strip_tags($node_redirect->field_baseurl_coupon['und']['0']['value']);
				$coupon_status_track = 2;
			}
		}
		$retailer_redirect = taxonomy_term_load($retailer_id_redirect);
		$part1_redirect = strip_tags($retailer_redirect->field_affiliate_url_part1['und']['0']['value']);
		$part2_redirect = strip_tags($retailer_redirect->field_affiliate_url_part2['und']['0']['value']);
		$network_id_redirect = strip_tags($retailer_redirect->field_network['und']['0'][tid]);
		$network_redirect = taxonomy_term_load($network_id_redirect);
		$network_name_redirect = strtolower(strip_tags($network_redirect->name));
		$uid1 = $nid_redirect.'iii'.uniqid(); // nid + event id		
		/* CHECK IF ? EXISTS IN BASEURL AND ACCORDING ADD PART 2 WITH & OR ?*/
		$question_mark = strpos($baseurl_redirect, "?");
		if (strpos($baseurl_redirect, "?") > -1){
			$part2_redirect = "&".$part2_redirect;
			// echo "n";
		} else {
			$part2_redirect = "?".$part2_redirect;
			// echo "y";
		}
		if(!empty($baseurl_redirect)){
			switch ($network_name_redirect) {
				case "omgpm":
					$url = $part1_redirect.'&uid='.$uid1.'&r='.rawurlencode($baseurl_redirect.$part2_redirect);
				break;
				case "tyroo":
					//$url = $part1_redirect.'/&lnkurl='.rawurlencode(rawurlencode($baseurl_redirect.$part2_redirect)).'&subid1='.$uid1;
					$url = $part1_redirect.'&subid1='.$uid1.'&dest='.$baseurl_redirect.$part2_redirect;
					//echo $url;
				break;
				case "flipkart":
					$url = $baseurl_redirect.$part2_redirect.'&affExtParam1='.$uid1;
					// $url = $baseurl_redirect.$part2_redirect;
				break;
				case "amazon":
					//$url = $baseurl_redirect.$part2_redirect.'&AffExtParam1='.$uid1;
					$url = $baseurl_redirect.$part2_redirect;
				break;
				case "jabong":
					//$url = $baseurl_redirect.$part2_redirect.'&AffExtParam1='.$uid1;
					$url = $baseurl_redirect.'?&subid='.$uid1.'#Q80C41v43gn09';
				break;
				case "snapdeal":
				    $url = $baseurl_redirect.'?&utm_campaign=afts&offer_id=17&aff_id=13273&aff_sub='.$uid1;
				break;
				default:
					$url = $baseurl_redirect;
			}
		} else {
			switch ($network_name_redirect) {
				case "omgpm":
					$url = $part1_redirect.'&uid='.$uid1;
				break;
				case "tyroo":
					$url = $part1_redirect.'/&subid1='.$uid1;
				break;
				case "flipkart":
					 $url = "http://www.flipkart.com".$part2_redirect.'&affExtParam1='.$uid1;
					// $url = "http://www.flipkart.com".$part2_redirect;
				break;
				case "amazon":
					// $url = "http://www.flipkart.com".$part2_redirect.'&AffExtParam1='.$uid1;
					$url = "http://www.amazon.in/".$part2_redirect;
				break;
				case "jabong":
					//$url = $baseurl_redirect.$part2_redirect.'&AffExtParam1='.$uid1;
					$url = 'www.jabong.com/?&subid='.$uid1.'#Q80C41v43gn09';
				break;
				default:
					$url = $node_redirect->field_affiliate_url['und']['0']['value'];
			}
		}
//	  echo $url;
//	  die;
	}
	
	
	
	
	/* 
	$nid = 
  /* Removed by Ashish to prevent double decoding on the redirect page*/
  //  $url = urldecode($url); 

  
	/* EVENT LOCATION */
	if(!empty($_GET['l'])){
	$loc_id = $_GET['l'];
	switch ($loc_id) {
				case "bc":
					$loc = 'Product_Page_Best_Coupon';
				break;
				case "oc":
					$loc = 'Product_Page_Other_Coupon';
				break;
				case "olp":
					$loc = 'Product_Page_Other_Links';
				break;
				case "tp":
					$loc = 'Taxonomy_Search_Page';
				break;
				case "cp":
					$loc = 'Coupon_Page';
				break;
				case "cpc":
					$loc = 'Coupon_Page_Category';
				break;

			}
	}
	
	$brand_track = taxonomy_term_load($node_redirect->field_brand['und']['0'][tid]);
	$category_track = taxonomy_term_load($node_redirect->field_category['und']['0'][tid]);
	
	global $base_url;
	if (stripos($base_url,'cuponation') != false){
		$track_domain = 'cuponation';
	} else {
		if (stripos($base_url,'m.couponvoodoo') != false) {
			$track_domain = 'm.couponvoodoo';
		} else {
			$track_domain = 'couponvoodoo';
		}
	}
	

	drupal_add_js(array('coupons' => array(			
			'User_Guid' => $uid2,
			'Event_Id' => $uid1,
			'Affiliate_URL' => $url,
			'Coupon_Code' => $coupon_code,
			'Event_Location' => $loc,
			'Event_Page' => $_GET['p'],
			'Click_Time' => gmdate('Y-m-d\TH:i:s\Z', (time()-(5.5*3600))),
			'Last_Checked' => gmdate('Y-m-d\TH:i:s\Z', strip_tags($node_redirect->field_lastcheckedtime['und']['0']['value'])),
			'Retailer' =>  $retailer_redirect->name.'('.$node_redirect->field_retailer['und']['0'][tid].')',
			'Brand' => $brand_track->name.'('.$node_redirect->field_brand['und']['0'][tid].')',
			'Category' => $category_track->name.'('.$node_redirect->field_category['und']['0'][tid].')',
			'Network' => $network_name_redirect,
			'Coupon_Status' => $coupon_status_track,
			'Domain' => $track_domain
			)), array('type' => 'setting'));
	
	
	
	drupal_add_js("jQuery(window).load(function(){
                  setTimeout(function(){
                      window.location.replace(\"" . $url . "\");
                  }, 100);
				 ga('send', 'event', 'coupon-redirection', 'redirect-page', Drupal.settings.coupons.Event_Id,{
					'dimension1': Drupal.settings.coupons.User_Guid, 
					'dimension3': Drupal.settings.coupons.Affiliate_URL, 
					'dimension4': Drupal.settings.coupons.Coupon_Code, 
					'dimension5': Drupal.settings.coupons.Event_Location, 
					'dimension6': Drupal.settings.coupons.Event_Page, 
					'dimension7': Drupal.settings.coupons.Click_Time, 
					'dimension8': Drupal.settings.coupons.Last_Checked, 
					'dimension9': Drupal.settings.coupons.Retailer, 
					'dimension10': Drupal.settings.coupons.Brand, 
					'dimension11': Drupal.settings.coupons.Category, 
					'dimension12': Drupal.settings.coupons.Network,
					'dimension2': Drupal.settings.coupons.Coupon_Status,
					'dimension13': Drupal.settings.coupons.Domain
					});
	        });", array('type' => 'inline', 'scope' => 'footer'));


		
$loader = $base_path . drupal_get_path('theme', 'basic') . '/images/loader.GIF';		
if ($coupon_code == 'Flipkart Offer'){
  return '<div class="coupon_window">
			<img src="'.$loader.'" width="160px" alt="Loading..."/>
            <h1>Offer Found! ... Please Wait</h1>
            <h2 class="coupon_window_redirect">
              You are being redirected to retailer page. To avail the offer simply add product to cart (no coupon required).
            </h2>
			<div class="clear"> </div>
            <div class="coupon_window_title">
              <div class="bridgecode">' . $coupon_code . '</div>
            </div>
            <div class="clear"> </div>
            <h2 class="coupon_window_redirect">
              Click the browser back button for returning to site and chatting with our team.
            </h2>
            <div class="clear"> </div>
			</div>';
} else {

	if ($coupon_code == 'no-coupons' || $coupon_code == 'No_Discounts'){
		  return '<div class="coupon_window">
					<img src="'.$loader.'" width="160px" alt="Loading..."/>
					<h1>Sorry, No Offer Found! ... Please Wait</h1>
					<h2 class="coupon_window_redirect">
						You are being redirected to retailer page
					</h2>
					<div class="clear"> </div>
					<h2 class="coupon_window_redirect">
					  Click the browser back button for returning to site and chatting with our team.
					</h2>
					<div class="clear"> </div>
					</div>';	
	} Else {
			
		if ($coupon_code == 'Deal-Activated'){
			  return '<div class="coupon_window">
						<img src="'.$loader.'" width="160px" alt="Loading..."/>
						<h1>Yipeee! Deal Activated ... Please Wait</h1>
						<h2 class="coupon_window_redirect">
						  You are being redirected to retailer page. To avail the offer simply add product to cart (no coupon required).
						</h2>
						<div class="clear"> </div>
						<div class="coupon_window_title">
						  <div class="bridgecode">' . $coupon_code . '</div>
						</div>
						<div class="clear"> </div>
						<h2 class="coupon_window_redirect">
						  Click the browser back button for returning to site and chatting with our team.
						</h2>
						<div class="clear"> </div>
						</div>';			
		
		} else {

			if ($coupon_code == 'Savings_Found'){
				return '<div class="coupon_window">
					<img src="'.$loader.'" width="160px" alt="Loading..."/>
					<h1>Awesome! Savings Found ... Please Wait</h1>
					<h2 class="coupon_window_redirect">
						You are being redirected to retailer page (no coupon required)
					</h2>
					<div class="clear"> </div>
					<h2 class="coupon_window_redirect">
					  Click the browser back button for returning to site and chatting with our team
					</h2>
					<div class="clear"> </div>
					</div>';			

			} else {
				if ($coupon_code == 'Link_Click'){
				return '<div class="coupon_window">
					<img src="'.$loader.'" width="160px" alt="Loading..."/>
					<h1>Please Wait ... </h1>
					<h2 class="coupon_window_redirect">
						You are being redirected to retailer page
					</h2>
					<div class="clear"> </div>
					<h2 class="coupon_window_redirect">
					  Click the browser back button for returning to site and chatting with our team
					</h2>
					<div class="clear"> </div>
					</div>';				
				
				} else {
			
						return '<div class="coupon_window">
								<img src="'.$loader.'" width="160px" alt="Loading..."/>
								<h1>Bazinga! Coupon Copied .. Please Wait</h1>
								<h2 class="coupon_window_redirect">
								  You are being redirected to retailer page. Simply paste (ctrl + v) this on the retailer cart / payment page to avail the discount:
								</h2>
								<div class="clear"> </div>
								<div class="coupon_window_title">
								  <div class="bridgecode">' . $coupon_code . '</div>
								</div>
								<div class="clear"> </div>
								<h2 class="coupon_window_redirect">
								   Click the browser back button for returning to site and chatting with our team.
								</h2>
								<div class="clear"> </div>
								</div>';
				}
			}
		}
}
}
}

/**
 * Implementation of hook_menu
 */
function coupons_theme() {
  $themes = array(
      'coupons_result_page' => array(
          'template' => 'coupon-finder-search-page',
          'variables' => array('data' => null),
      ),
      'coupons_bestcouons' => array(
          'template' => 'coupons-bestcouons',
          'variables' => array('data' => null),
      ),
      'coupons_taxonomy' => array(
          'template' => 'coupons-taxonomy',
          'variables' => array('data' => null),
      ),   
      'coupon_details_popup' => array(
          'template' => 'coupon-details-popup',
          'variables' => array('data' => null),
      ),   	  	  
  );

  return $themes;
}





function coupons_finder_form($form, &$form_state, $small = true) {
  global $base_url, $logo, $base_path;
  if ($GLOBALS['_domain']['subdomain'] == 'offers.couponvoodoo.com') {
    return array();
  }
  $current_domain = get_current_domain();
  // Load the modal library and add the modal javascript.
  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();

  if ($form_state['ajax']) {


    $form['video'] = array(
 //       '#markup' => '<iframe style= "margin:0px auto;
 //       text-align:center;
 //       "frameborder="0" name="cbox1376655443154" width="420"  src="//www.youtube.com/embed/w9UgUIH4SZk?wmode=transparent&amp;amp;rel=0&amp;amp;autoplay=1&amp;amp;&amp;width=420&amp;iframe=true; iframe=true" scrolling="no" class="cboxIframe"></iframe>',
 
	'#markup' => '<iframe width="480" height="305" src="//www.youtube.com/embed/w9UgUIH4SZk?version=3&start=0&end=73&autoplay=1" frameborder="0" end="72" autoplay="1"></iframe>'

   );
    //Customize modal window

    $form['url'] = array(
        '#title' => t('Got it? Try it Out'),
        '#type' => 'textfield',
        '#size' => 70,
        '#attributes' => array('class' => array('apachesolr-autocomplete', 'unprocessed'), 'placeholder' => t('Enter a search term or a product url')),
        '#maxlength' => 255,
    );

    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#prefix' => '<div class="submit">',
        '#suffix' => '</div>',
        '#value' => t('Find My Coupons')		
    );


    return $form;
  }

  $form['url'] = array(
      '#title' => t('Try Another Product'),
      '#type' => 'textfield',
      '#size' => 100,
      '#attributes' => array('class' => array('apachesolr-autocomplete','unprocessed'), 'placeholder' => t('Product Name, Brand or URL')),
      '#maxlength' => 255,
  );

  $form['actions']['submit'] = array(
      '#type' => 'submit',
      '#prefix' => '<div class="submit">',
      '#value' => t('Find My Coupons'),
	  '#suffix' => '</br><div class="search-suggestion"> <bold> Suggested Searches: </bold></br>- Brands like Nike, Titan, Levis </br>- Categories like Watches, Shoes </br>- Product Names like Nike Ballista</div></div>',
      
	  
  );

  
  
  
  
  
  
  
  
  

  
  if ($small) {
    // $form['url']['#suffix'] = '<div class="whatisthis"><a href="http://www.couponvoodoo.com/content/whats-product-url" target="_blank">Whats this?</a></div>';
    
	$form['url']['#title'] = t(get_label('Go Ahead! Give It A Try!'));
    if ($current_domain == 'couponvoodoo') {
		// $form['url']['#description'] = t('Try It: <a href="' . $base_url . '/c/men-shoes-other-footwear-coupons" target="_blank">Mens Shoes</a>, <a href="' . $base_url . '/c/women-watches-coupons" target="_blank">Womens Watches</a>, <a href="' . $base_url . '/b/reebok-coupons" target="_blank">Reebok</a>, <a href="' . $base_url . '/b/nike-coupons" target="_blank">Nike</a>, <a href="' . $base_url . '/rcp/Jabong.com/coupons-offers" target="_blank">Jabong</a>, <a href="' . $base_url . '/rcp/myntracom/coupons-offers" target="_blank">Myntra</a>');
/*		$form['actions']['view_video'] = array(
			'#markup' => '<a href="' . $base_url . '/coupons_viewdemo/nojs" id="edit-view_video" class="ctools-use-modal form-view_video">View Video</a>',
			'#prefix' => '<div class="view_video">',
			'#suffix' => '</div>',
		);
*/	}
  }


  $loading_image = $base_path . drupal_get_path('theme', 'basic') . '/images/Frugal_Froggy.jpg';
  $dollor_image = $base_path . drupal_get_path('theme', 'basic') . '/images/Loader-Dollar.gif';
//   $loading_image_content = '';
//   $loading_image_content = "<p text-align='center' position='relative'>";
  $loading_image_content .= "<div><p style='text-align:center; position:relative;'><p class='frog_title'> Frugal Froggy At Work (may take a minute or two!)</p>";
  $loading_image_content .= "<img class='frog' src='$loading_image' width='400px' alt='Loading...'/>";
  $loading_image_content .= "<img class='dollor' src='$dollor_image' /></p></div>";
//   $loading_image_content .= "</p>";
  $form['loading_image'] = array(
      '#markup' => $loading_image_content,
      '#prefix' => '<div id="loading_image_div" style="display:none">',
      '#suffix' => '</div>',

  );
  drupal_add_js(drupal_get_path('module', 'coupons') . '/coupons_loading.js');

  return $form;
}

function coupons_validate_url($url) {
  //http://jabong.com/swayam-Eyelet-Turquoise-Curtain-200226.html
  $status = strpos($url, 'http://');
  if( is_numeric($status) ){
       return '1';
  }
  $status = strpos($url, 'https://');
  if( is_numeric($status) ){
       return '1';
  }
  $status = strpos($url, 'www.');
  if( is_numeric($status) ){
       return '1';
  }
  $status = strpos($url, 'http://www.');
  if( is_numeric($status) ){
       return '1';
  }else{
       return '0';
  }
  
}

function coupons_finder_form_validate($form, &$form_state) {
	$urlStatus = coupons_validate_url( $form_state['values']['url'] );
    /* adding variables to push tp GA event on page load */    
	$_SESSION['CvGa']['url'] = $form_state['values']['url'];
    $_SESSION['CvGa']['urlStatus'] = $urlStatus;
  
	  
  if( !empty($form_state['values']['url']) ){
      if($urlStatus == 0){
      $searchText = "search/site/".$form_state['values']['url'];
	   drupal_goto( $searchText );
  }
  }elseif( empty($form_state['values']['url']) ){
    $searchText = "search/site/";
    drupal_goto( $searchText );
  }
  
  //   if (($form_state['values']['url'] == "")) {
  //    form_set_error('url', t('URL shouldn\'t be empty.'));
  // }
  // if ((filter_var(($form_state['values']['url']), FILTER_VALIDATE_URL) === false)) {
  //      form_set_error('url', t('Please enter a valid URL.'));
  // } else {
  global $base_url;
  $cid = urldecode($form_state['values']['url']);
  if (cache_get($cid)) {
    return;
  }
  
  /*Url changed by Sanjay*/
  //$url = "http://plugin.theshoppingpro.com/CouponAutoWeb.php?q=" . urldecode($form_state['values']['url']);
  $url = "http://54.243.150.171/CouponAutoWebPhase2.php?q=" . urldecode($form_state['values']['url']);
 
/* start By Lavesh to track event on mixpanel */
$fullProdUrl = urldecode($form_state['values']['url']);

if(strpos($fullProdUrl,'?') > 1) {
$prodUrl = reset(explode("?",$fullProdUrl));
}
else $prodUrl = $fullProdUrl;

$retailerDomain = get_domain($fullProdUrl);
$brand = reset(explode(".",$retailerDomain));



//exit;
/* End By Lavesh to track event on mixpanel */
 
  $json = drupal_http_request($url, array('timeout' => 600.0));
  $json = $json->data;
  $jsonData = preg_replace("/[\\n\\r]+/", " ", $json);
 $jsonArray = json_decode($jsonData);
  
/* Start By Lavesh to track event on mixpanel */
//var_dump($jsonArray);

  $bestCouponVal = $jsonArray->data[0]->BestCoupon ;
  
  if ($bestCouponVal == 1) {
    $isSuccessful = 'yes';
    $couponCode = $jsonArray->data[0]->couponCode ;
    $saving = $jsonArray->data[0]->Saving ;
  }
  else {
    $isSuccessful = 'no';
    $couponCode = 'N/A' ;
    $saving = 0;
  }
  
  $cpnResultJson = '';
  
  foreach ($jsonArray->data as $couponResult){
    if ( $couponResult->Successful == 1 ){
      $cpnSaving = $couponResult->Saving;
    }
    else {
      $cpnSaving = 0;
    }
    
    $cpnResultJson = $cpnResultJson . $couponResult->couponCode.'~'.$cpnSaving.'|';
  }



/* End By Lavesh to track event on mixpanel */   


  $output = '';
  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "1")) {
    form_set_error('url','Sorry! This retailer is not covered yet. Please view <a href="http://www.couponvoodoo.com/Retailers-Covered" target="_blank">list</a> of retailers that we cover.');
  }
  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "2")) {
    form_set_error('url', 'CouponVoodoo only works with the product page url e.g. http://www.jabong.com/giordano-Victory-Black-P9275-Black-Black-Analog-Watch-168021.html for products that are still in stock. Please recheck if the url you entered is that of a product and if so that the product is still in stock.');
  }

  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "3")) {
    form_set_error('url',$jsonArray->data[0]->Description);
  }
  //http://www.lenskart.com/kagawa-y2307-black-white-design-c01-eyeglasses.html

  if (empty($jsonArray)) {
    form_set_error('url','Bummer! Something went wrong. Please try another product.');
  }

  if (strpos($json,'ErrorCode') === false) {
    cache_set(base64_decode($cid), $jsonArray, 'cache', time() + 60*60);   
  }
}
/* Function added by Lavesh to get domain from url */

function get_domain($url)
{
  $pieces = parse_url($url);
  $domain = isset($pieces['host']) ? $pieces['host'] : '';
  if (preg_match('/(?P<domain>[a-z0-9][a-z0-9\-]{1,63}\.[a-z\.]{2,6})$/i', $domain, $regs)) {
    return $regs['domain'];
  }
  return 'N/A.';
}


function coupons_finder_form_submit($form, &$form_state) {
  $redirect = 'coupon-result/' . rawurlencode($form_state['values']['url']);
  $form_state['redirect'] = $redirect;
  if ($form_state['ajax']) {
    $form_state['ajax_commands'][] = ctools_ajax_command_redirect($redirect);
  }
}

function coupons_result($raw_url) {
  global $base_url;
  
  /*url replaced by sanjay*/
  //$url = "http://plugin.theshoppingpro.com/CouponAutoWeb.php?q=" . urldecode($raw_url);
  $url = "http://54.243.150.171/CouponAutoWebPhase2.php?q=" . urldecode($raw_url);
  
  $cid = urldecode($raw_url);
  
/* Mixpanel start*/
  $fullProdUrl = $cid;

  if(strpos($fullProdUrl,'?') > 1) {
    $prodUrl = reset(explode("?",$fullProdUrl));}
  else
    $prodUrl = $fullProdUrl;

  $retailerDomain = get_domain($fullProdUrl);
  $brand = reset(explode(".",$retailerDomain));
/*Mixpanel End */
  
  if ($data = cache_get(base64_decode($cid))) {
    $jsonArray = $data->data;

  
  }
  else {
    $json = drupal_http_request($url, array('timeout' => 600.0));
    
    
    
    $json = $json->data;
    $jsonData = preg_replace("/[\\n\\r]+/", " ", $json);
    $jsonArray = json_decode($jsonData);
    
    //print_r($jsonArray);
    // die;
    }
    /**added by sanjay*/
    if($jsonArray->header->Use == 1 || $jsonArray->header->Use == 0){
      //$proTitle = $jsonArray->header->ProductName;
      $proTitle = $jsonArray->header->PageTitle;
      
      $baseUrl = $jsonArray->header->BaseUrl;
      
      $query = db_select('field_data_field_base_url', 'n')
		   ->fields('n', array('ntity_id') )
		   ->condition('n.field_base_url_value', $baseUrl, '=')
		   ->countQuery();
      $result = $query->execute();
      $record = $result->fetch();
      
	  	  
//     $brand_name = $jsonArray->header->ProductBrand;
//     //$brand_name = 'nike';
//     $vocabulary_name = 'brand';
//     $BrandId = coupons_get_term_from_name($brand_name, $vocabulary_name);
//     if($BrandId == 0){
//	$BrandId = coupons_create_taxonomy_term($brand_name, 4);
//      }

      $brand_name = $jsonArray->header->ProductBrand;
	 // $Query = db_query("SELECT tid FROM taxonomy_term_data WHERE vid = 4 and name = '$brand_name' ");
	  $Query=db_query('SELECT tid FROM {taxonomy_term_data} WHERE vid = 4 and name = :brand_name', array(':brand_name' => $brand_name));
	  $Ruery = $Query->fetch();
	  $BrandId = $Ruery->tid;
	  
	  
      //$brand_name = 'nike';
      // $vocabulary_name = 'brand';
      // $BrandId = coupons_get_term_from_name($brand_name, $vocabulary_name);
      
	  //echo '===='.$brand_name;
      if($BrandId == ''){
	$BrandId = coupons_create_taxonomy_term($brand_name, 4);
      }


       if($record->expression == 0){
	//echo 'add';
	//die;
	$node = new stdClass();
	$node->language = LANGUAGE_NONE;
	$node->type     = '_product_and_coupon';	
	$node->uid      = 1;
    
	$node->field_category['und'][0]['tid']			= trim( $jsonArray->header->Category );;
	//$node->field_category['und'][0]['tid']			= 1;
	
	$node->title    				  	= $proTitle;
	$node->field_description[und][0][value]	 	  	= trim( $jsonArray->header->ProductDescription );
	$node->field_product_price[und][0][value]	  	= ( $jsonArray->header->ListingProductPrice )?$jsonArray->header->ListingProductPrice:0;
	//$node->field_product_price[und][0][value]	  	= 10;
	//$node->field_retailer[und][0]['tid'] 		  	= ($jsonArray->header->Retailer > 0)?$jsonArray->header->Retailer:1;
	$node->field_retailer[und][0]['tid'] 		  	= $jsonArray->header->Retailer;
	//$node->field_retailer[und][0]['tid'] 		  	= 1;
	$node->field_base_url[und][0][value] 		  	= trim( $jsonArray->header->BaseUrl);
	$node->field_retailer_product_name[und][0][value] 	= trim( $jsonArray->header->ProductName );
	$node->field_product_image[und][0][value] 	  	= trim( $jsonArray->header->ProductImage );
	$node->field_brand[und][0]['tid'] 		  	= trim($jsonArray->header->ProductBrand);
	$node->field_brand[und][0]['tid'] 		  	= $BrandId;
	
	$node->field_mrpproductprice[und][0][value]	  	= ($jsonArray->header->MRPProductPrice)?$jsonArray->header->MRPProductPrice:0 ;
	//$node->field_mrpproductprice[und][0][value]	  	= 0 ;
	$expDate = explode('=' , $jsonArray->header->LastCheckedTime);	
	$node->field_lastcheckedtime[und][0][value]	  	= $expDate[0];
	$node->field_affiliateurl[und][0][value]	  	= trim( $jsonArray->header->AffiliateURL );
	$node->body[und][0][value]			  	= trim( $jsonArray->header->MetaDescription );
	///$node->metatag[und][0]['data']			= trim( $jsonArray->header->MetaDescription );
	$node->field_best_coupon_description[und][0][value]	= trim( $jsonArray->header->bestCouponResult->CouponDesc );
	
	$node->field_best_coupon_status[und][0][value]	  	= trim( $jsonArray->header->CouponResult );
	//$node->field_product_popularity[und][0][value]	= ( $jsonArray->header->Popularity )?$jsonArray->header->Popularity:0;
	$node->field_product_popularity[und][0][value]	  	= $jsonArray->header->Popularity;
	
	///if($jsonArray->header->CouponResult == 1){
	  $node->field_best_coupon_couponcode[und][0][value] 	= trim( $jsonArray->header->bestCouponResult->CouponCode );
	  $node->field_best_coupon_saving[und][0][value]	= ( $jsonArray->header->bestCouponResult->Saving)?$jsonArray->header->bestCouponResult->Saving:0;
	  $node->field_best_coupon_netpriceafters[und][0][value]= ( $jsonArray->header->bestCouponResult->NetPriceAfterSaving)?$jsonArray->header->bestCouponResult->NetPriceAfterSaving:0;
	  $node->field_best_coupon_url[und][0][value]		= trim( $jsonArray->header->bestCouponResult->url );
	//}
	//mail('sanjay.kumar1@mail.vinove.com','jsonArray','jsonArray--->'.print_r($jsonArray->data,1));
	$node->field_best_coupon_info[und][0][value]		= serialize( $jsonArray->data );
	
	//$node->	field_page_url[und][0][value]		= $Pageurl;
	
	/*$ImgPath = $jsonArray->header->ProductImage;
	$ImgFile = pathinfo($ImgPath);         // $file is set to "index.php"
	
	$image = file_get_contents($ImgPath); // string
	$file = file_save_data($image, 'public://'.$ImgFile['basename'] ,FILE_EXISTS_REPLACE);
	$node->field_product_images[LANGUAGE_NONE]['0']['fid'] = $file->fid;*/
	
	node_save($node);
	global $base_url;
	
	// $urlAlias = $base_url.'/'.drupal_get_path_alias('node/'.$node->nid);
	
	// $node2 = node_load( $node->nid );
	// $node2->field_page_url[und][0][value] = $urlAlias;
	// node_save($node2);
	
	if( !empty($node->nid) ){
	  $response = json_encode( array('ResponseCode' => '1', 'Response' => 'Node added.', "Page_URL" => "$urlAlias") );
	  echo $response;
	}else{
	  $response = json_encode( array('ResponseCode' => '4', 'Response' => 'Unexpected Error.') );
	  echo $response;
	}
	
      }elseif($record->expression == 1){
	//echo 'update';
	
	$expDate = explode('=' , $jsonArray->header->LastCheckedTime);
	///print_r($expDate );
	
	//check product exist or not
	$query = db_select('field_data_field_base_url', 'n')
		     ->fields('n', array('entity_id','field_base_url_value') )
		     ->condition('n.field_base_url_value', $baseUrl, '=');		   
	$result = $query->execute();
	$record = $result->fetch();
	//print_r($record);
	$queryLastUpdate = db_select('field_data_field_lastcheckedtime', 'n')
		     ->fields('n', array('field_lastcheckedtime_value') )
		     ->condition('n.entity_id ', $record->entity_id , '=');		   
	$resultLastUpdate = $queryLastUpdate->execute();
	$recordLastUpdate = $resultLastUpdate->fetch();
	
	$lastUpdatedDate = $recordLastUpdate->field_lastcheckedtime_value;
	
	//last update ($expDate) shoud be different ($lastUpdatedDate)
	
	//print_r( date('d-m-Y', '1383111423'));
	//echo '===============<br>';
	//print_r( date('d-m-Y', $lastUpdatedDate));
	
	//die;
	if( $expDate[0] != $lastUpdatedDate){
	 
  /**    $brand_name = $jsonArray->header->ProductBrand;
	 // $Query = db_query("SELECT tid FROM taxonomy_term_data WHERE vid = 4 and name = '$brand_name' ");
	  $Query=db_query('SELECT tid FROM {taxonomy_term_data} WHERE vid = 4 and name = :brand_name', array(':brand_name' => $brand_name));
	  $Ruery = $Query->fetch();
	  $BrandId = $Ruery->tid;
	  
	  var_dump($Ruery);
	  echo $brand_name;
	  echo "--------".$BrandId;
	  
      //$brand_name = 'nike';
      // $vocabulary_name = 'brand';
      // $BrandId = coupons_get_term_from_name($brand_name, $vocabulary_name);
      
	  //echo '===='.$brand_name;
      if($BrandId == ''){
	$BrandId = coupons_create_taxonomy_term($brand_name, 4);
	echo "----loop entered----".$BrandId;
      }
*/	 
	 
//	 $brand_name = $jsonArray->header->ProductBrand;
//	  //$brand_name = 'nike';
//	  $vocabulary_name = 'brand';
//	  $BrandId = coupons_get_term_from_name($brand_name, $vocabulary_name);
//	  if($BrandId == 0){
//	    $BrandId = coupons_create_taxonomy_term($brand_name, 4);
//	  }
	  
	  $node = node_load($record->entity_id);
	  
	  //$node->field_category['und'][0]['tid']			= trim( $jsonArray->header->Category );;
	  
	  $node->field_category['und'][0]['tid']			= 1;
	  
	  $node->title    				  	= $proTitle;
	  $node->field_description[und][0][value]	 	  	= trim( $jsonArray->header->ProductDescription );
	  $node->field_product_price[und][0][value]	  	= trim( $jsonArray->header->ListingProductPrice );
	  //$node->field_product_price[und][0][value]	  	= 10;
	  $node->field_retailer[und][0]['tid'] 		  	= ($jsonArray->header->Retailer > 0)?$jsonArray->header->Retailer:1;
	  //$node->field_retailer[und][0]['tid'] 		  	= 1;
	  $node->field_base_url[und][0][value] 		  	= trim( $jsonArray->header->BaseUrl);
	  $node->field_retailer_product_name[und][0][value] 	= trim( $jsonArray->header->ProductName );
	  $node->field_product_image[und][0][value] 	  	= trim( $jsonArray->header->ProductImage );
	  $node->field_brand[und][0]['tid'] 		  	= trim($jsonArray->header->ProductBrand);
	  $node->field_brand[und][0]['tid'] 		  	= $BrandId;
	  
	  $node->field_mrpproductprice[und][0][value]	  	= trim($jsonArray->header->MRPProductPrice);
	  //$node->field_mrpproductprice[und][0][value]	  	= 0 ;
	  
	  $node->field_lastcheckedtime[und][0][value]	  	= $expDate[0];
	  $node->field_affiliateurl[und][0][value]	  	= trim( $jsonArray->header->AffiliateURL );
	  $node->body[und][0][value]			  	= trim( $jsonArray->header->MetaDescription );
	  ///$node->metatag[und][0]['data']			 = trim( $jsonArray->header->MetaDescription );
	  $node->field_best_coupon_description[und][0][value]	  	= trim( $jsonArray->header->bestCouponResult->CouponDesc );
	  
	  $node->field_best_coupon_status[und][0][value]	  	= trim( $jsonArray->header->CouponResult );
	  
	  
		if ($node->field_best_coupon_status['und']['0'][value] == 1) {
		$node->field_best_coupon_status_display['und']['0'][value] = 'With Coupons';
		} else {
		$node->field_best_coupon_status_display['und']['0'][value] = 'Without Coupons';
		}
	  
	  $node->field_product_popularity[und][0][value]	  	= trim( $jsonArray->header->Popularity );
	  
	  if($jsonArray->header->CouponResult == 1){
	    $node->field_best_coupon_couponcode[und][0][value] 	= trim( $jsonArray->header->bestCouponResult->CouponCode );
	    $node->field_best_coupon_saving[und][0][value]	  	= trim( $jsonArray->header->bestCouponResult->Saving);
	    $node->field_best_coupon_netpriceafters[und][0][value]	= trim( $jsonArray->header->bestCouponResult->NetPriceAfterSaving);
	    $node->field_best_coupon_url[und][0][value]		= trim( $jsonArray->header->bestCouponResult->url );
	  }	
	  $node->field_best_coupon_info[und][0][value]		= serialize( $jsonArray->data );
	  //print_r($node);
	  //die;
	  node_save($node);
	}
      }	
    // }  
    /*end here*/   
    
  }

  $output = '';
  
  /*url replaced by sanjay*/
  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "1")) {
    return '<span class="error">Sorry! This retailer is not covered yet. Please view <a href="http://www.couponvoodoo.com/Retailers-Covered" target="_blank">list</a> of retailers that we cover.</span>';
  }
  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "2")) {
    return '<span class="error">CouponVoodoo only works with the product page url e.g. http://www.jabong.com/giordano-Victory-Black-P9275-Black-Black-Analog-Watch-168021.html.</span>';
  }

  if (isset($jsonArray->data[0]->ErrorCode) && ($jsonArray->data[0]->ErrorCode == "3")) {
    return '<span class="error">' . $jsonArray->data[0]->Description . '</span>';
  }
  /*end url replaced by sanjay*/

  $is_success = true;
  
 # print_r($jsonArray);exit;
  if (isset($jsonArray)) {
    global $base_root;
    $title = t('<span>Results for: </span>  ' . urldecode($raw_url));
    $items = array();
    echo $baseUrl;
    //display product info in case 'use = 1'
    if( $jsonArray->header->Use == 1 ){
	echo $baseUrl;
	
      $ProUrl = db_select('field_data_field_base_url', 'n')
		     ->fields('n', array('entity_id') )
		     ->condition('n.field_base_url_value', $baseUrl, '=');		   
      $RProUrl = $ProUrl->execute();
      $FRProUrl = $RProUrl->fetch();
      $nid = $FRProUrl->entity_id;
      $productURL =  $base_root.base_path().drupal_get_path_alias('node/'.$nid);
      echo $productURL;
	  //die;
      //$FrameId = views_embed_view('product_info', 'page', 68);
      //print_r($FrameId);
      //$items[] = $FrameId;
      drupal_goto($productURL);
    }
    
    $type = 'ul';
    $attributes = array(
        'id' => 'coupon_search_listing',
        'class' => 'custom-coupon_search_listing',
    );
    $i = 0;
    $coupons = array();  
    
    foreach ($jsonArray->data as $key => $value) {	//url replaced by sanjay
      if (is_object($value)) {
        if ($value->Successful =="1") {
          $is_success = false;
        }
        $i++;
        $value->counter = $i;
        $items[] = array(
            'data' => theme('coupons_result_page', array('row' => $value)),
            'id' => 'search_listing_li_row_' . $i,
            'class' => array('search_listing_row_li'),
        );
        $coupons['c_' . $i] = $value->couponCode;
/* Mixpanel start*/
        $savings['c_' . $i] = $value->Saving;
/* Mixpanel end*/
      }
    }
    # print_r($jsonArray);exit;
//    drupal_add_js(array('coupons' => $coupons), 'setting');

/*drupal_add_js(array('coupons' => $coupons, 'savings' => $savings, 'fullProdUrl' => $fullProdUrl, 'prodUrl' => $prodUrl, 'retailerDomain' => $retailerDomain, 'brand' => $brand), 'setting');

drupal_add_js("jQuery(document).ready(function($){
          $('.unlock_coupon').click(function(){
              var coupon_code = '';
              
              var c = jQuery(this).attr('rel');
              for (var item in Drupal.settings.coupons) {
                if (item == c){
                  coupon_code = Drupal.settings.coupons[item];

		  saving = Drupal.settings.savings[item];
		  brand =  Drupal.settings.brand;
		  fullProdUrl =  Drupal.settings.fullProdUrl;
		  prodUrl =  Drupal.settings.prodUrl;
		  retailerDomain =  Drupal.settings.retailerDomain;

                }
              }

              $(this).html(coupon_code);
              $(this).addClass('copied_coupon')
              var url = $(this).attr('href')+'&c='+coupon_code;
              $(this).attr('href',url);
              window.open($(this).attr('href'));
             return true;
          });
        });", array('type' => 'inline', 'scope' => 'footer'));


    drupal_add_js(drupal_get_path('theme', 'basic') . '/js/jquery.zclip.min.js');
    drupal_add_js(drupal_get_path('module', 'coupons') . '/coupons.js');
    $path = $base_url . "/" . drupal_get_path('theme', 'basic') . "/js/ZeroClipboard1.swf";
    drupal_add_js("jQuery(window).load(function($){
                     jQuery('.unlock_coupon').zclip({
                            path:'" . $path . "',
                            copy: function() {
                                  var c = jQuery(this).attr('rel');
                                  for (var item in Drupal.settings.coupons) {
                                    if (item == c){
                                      return Drupal.settings.coupons[item];
                                    }
                                  }
                              }
                       });
                });", array('type' => 'inline', 'scope' => 'footer'));
*/

    if ($is_success) {
      $error_msg = '<div class="messages error">
                Sorry! We tried our best but no coupons work for your product. Here is a list of coupons we tried, please read the response field for each coupon, you maybe able to avail discounts by increasing your cart value or selecting anther product:
          </div>';
    }
    return theme_item_list(array('items' => $items, 'title' => $title.$error_msg, 'type' => $type, 'attributes' => $attributes));
  } else {
    return '<span class="error">Bummer! Something went wrong. Please try another product.</span>';
  }
}

/**
 * Implementation of hook_theme
 */

/**
 * Implements hook_block_info().
 */
function coupons_block_info() {
  $blocks['coupons_block_form'] = array(
      'info' => t('Coupon finder block.'),
  );
  $blocks['coupons_taxonomy_description'] = array(
      'info' => t('Coupon taxonomy description block.'),
  );
  $blocks['coupons_finder_taxonomy'] = array(
      'info' => t('Coupon finder for taxonomy.'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */	
function coupons_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'coupons_finder_taxonomy':
      $block['content'] = drupal_get_form('coupons_finder_form_for_taxonomy', false);
      break;
    case 'coupons_block_form': 
	//If ($current_domain != 'offers.couponvoodoo'){
      $block['content'] = drupal_get_form('coupons_finder_form', false);
	  //}
      break;
	case 'coupons_taxonomy_description':
	//print_r(menu_get_object('term', 2));exit;
		$termid = arg(2);
		$term = taxonomy_term_load($termid);
	
	$current_domain = get_current_domain();
	If ($current_domain == 'couponvoodoo'){
		if ( $term->description != ''){
		// echo "<div class='taxonomy_description'>$term->description</div>";
		  $block['content'] = $term->description;
		} else {
			$block['content'] = 'Browse a wide range of '.$term->name.' products with updated discounts, coupons and offers brought to you by CouponVoodoo. Simply click on a '.$term->name.' product of your choice to get the latest discount information for it.';
		}
	} else {
		$block['content'] = 'Find the best price for '.$term->name.' products with the latest discounts, coupons & offers';
	}
		//print '<pre>';print_r($term);exit;
	  break;
  }
  return $block;
}

function coupons_create_taxonomy_term($name, $vid) {
  $term = new stdClass();
  $term->name = $name;
  $term->vid = $vid;
  taxonomy_term_save($term);
  return $term->tid;
}

/**
* Helper function to dynamically get the tid from the term_name
*
* @param $term_name Term name
* @param $vocabulary_name Name of the vocabulary to search the term in
*
* @return Term id of the found term or else FALSE
*/

/** START OF NOTE BY ASHISH - FOLLOWING FUNCTION IS NOT REDUNTANT AND INCORRECT */
function coupons_get_term_from_name($term_name, $vocabulary_name) {
  
  if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
    
    $vid = $vocabulary->vid;
    $Query = db_query('SELECT ttd.tid FROM {taxonomy_term_data} AS ttd WHERE ttd.vid = 4 and ttd.name = :brand_name', array(':brand_name' => $brand_name));
    $Ruery = $Query->fetch();
    
    if($Ruery->tid == ''){
      return 0;
    }else{
      return $Ruery->tid;
    }
  }
  
}
/** END OF NOTE BY ASHISH - FOLLOWING FUNCTION IS NOT REDUNTANT AND INCORRECT */

function coupons_copy_best_coupon($nid){

  $baseUrl = db_select('field_data_field_base_url', 'b')
		     ->fields('b', array('field_base_url_value') )
		     ->condition('b.entity_id', $nid, '=');		   
  $RbaseUrl = $baseUrl->execute();
  $FRbaseUrl = $RbaseUrl->fetch();
  
  $raw_url = $FRbaseUrl->field_base_url_value;
  /*******************************************************************/  
   
  $cid = urldecode($raw_url);
  
  /* Mixpanel start*/
  $fullProdUrl = $cid;

  if(strpos($fullProdUrl,'?') > 1) {
    $prodUrl = reset(explode("?",$fullProdUrl));}
  else
    $prodUrl = $fullProdUrl;

  $retailerDomain = get_domain($fullProdUrl);
  $brand = reset(explode(".",$retailerDomain));
  /*Mixpanel End */
  
  /******************************************************************/ 
  $node = node_load($nid);
  
  $BestCouponCodeStatus = 1;
  $bestSaving = $node->field_best_coupon_saving[und][0]['value'];
  $bestCouponCodeStatus = $node->field_best_coupon_status[und][0]['value'];  //successful  
  $bestCouponCode = $node->field_best_coupon_couponcode[und][0]['value'];
  $bestCouponDescription = $node->field_best_coupon_description[und][0]['value'];
  $bestCouponDomain = $retailerDomain;
  $bestCouponUrl = $node->field_best_coupon_url[und][0]['value'];
  
  $bestCouponValue = (object) array('BestCoupon' => $BestCouponCodeStatus,
			  'Saving' => $bestSaving,
			  'Successful' => $bestCouponCodeStatus,
			  'couponCode' => $bestCouponCode,
			  'description' => $bestCouponDescription,
			  'domain' => $bestCouponDomain,
			  'url' => $bestCouponUrl
			  );
  
    global $base_root;
    $items = array();
    
    $type = 'ul';
    $attributes = array(
        'id' => 'coupon_search_listing',
        'class' => 'custom-coupon_search_listing',
    );
    $i = 0;
    $coupons = array();  
      if (is_object($bestCouponValue)) {
        if ($bestCouponCodeStatus =="1") {
          $is_success = false;
        }
        $i++;
        $bestCouponValue->counter = $i;
	
        $items[] = array(
            'data' => theme('coupons_bestcouons', array('row' => $bestCouponValue)),
            'id' => 'search_listing_li_row_' . $i,
            'class' => array('search_listing_row_li'),
        );
        $coupons['best_' . $i] = $bestCouponValue->couponCode;
	/* Mixpanel start*/
        $savings['best_' . $i] = $bestCouponValue->Saving;
	/* Mixpanel end*/
      }
/*
  //drupal_add_js(drupal_get_path('theme', 'basic') . '/js/jquery.clipboard.js');
  drupal_add_js(drupal_get_path('module', 'coupons') . '/coupons.js');
  $path = $base_url . "/" . drupal_get_path('theme', 'basic') . "/js/jquery.clipboard.swf";
  


drupal_add_js(array('coupons' => $coupons, 'savings' => $savings, 'fullProdUrl' => $fullProdUrl, 'prodUrl' => $prodUrl, 'retailerDomain' => $retailerDomain, 'brand' => $brand), 'setting');

drupal_add_js("jQuery(document).ready(function($){
          $('.unlock_best_coupon').click(function(){
	      //alert('test test');
	      
	      var coupon_code = '';
              var c = jQuery(this).attr('rel');
	      
	      coupon_code = Drupal.settings.coupons.best_1;

	      saving = Drupal.settings.savings;
	      brand =  Drupal.settings.brand;
	      fullProdUrl =  Drupal.settings.fullProdUrl;
	      prodUrl =  Drupal.settings.prodUrl;
	      retailerDomain =  Drupal.settings.retailerDomain;


              $(this).html(coupon_code);
              $(this).addClass('copied_coupon')
              var url = $(this).attr('href')+'&c='+coupon_code;
	      
              $(this).attr('href',url);

			// BY ASHISH: COMMENTED OUT TO PREVENT MULTI CLICK - THIS IS A HACK NEED TO TAKE A RELOOK TO SEE WHERE THE URL IS OPENING FROM	            
			//	  window.open($(this).attr('href'));
	        return true;
          });
        });", array('type' => 'inline', 'scope' => 'footer'));


    
	
    drupal_add_js("jQuery(window).load(function($){
                      jQuery('.unlock_best_coupon').clipboard({
                            path:'" . $path . "',
                            copy: function() {
                                return Drupal.settings.coupons.best_1;
                              }
                      });
                });", array('type' => 'inline', 'scope' => 'footer'));
*/
    if ($is_success) {
      $error_msg = '<div class="messages error">
                Sorry! We tried our best but no coupons work for your product. Here is a list of coupons we tried, please read the response field for each coupon, you maybe able to avail discounts by increasing your cart value or selecting anther product:
          </div>';
    }
    return theme_item_list(array('items' => $items, 'title' => $title.$error_msg, 'type' => $type, 'attributes' => $attributes));
  /*} else {
    return '<span class="error">Bummer! Something went wrong. Please try another product.</span>';
  } */ 
}


function coupons_copy_coupon($nid){
$ProPrice = db_select('field_data_field_product_price', 'l')
		->fields('l', array('field_product_price_value') )
		->condition('l.entity_id', $nid, '=');	
$RProPrice = $ProPrice->execute();
$FProPrice = $RProPrice->fetch();
$productPrice = $FProPrice->field_product_price_value;
$product_node = node_load($nid);

  $ProUrl = db_select('field_revision_field_best_coupon_info', 'n')
		     ->fields('n', array('field_best_coupon_info_value') )
		     ->condition('n.entity_id', $nid, '=');		   
  $RProUrl = $ProUrl->execute();
  $FRProUrl = $RProUrl->fetch();
  
  /*******************************************************************/
   
  $baseUrl = db_select('field_data_field_base_url', 'b')
		     ->fields('b', array('field_base_url_value') )
		     ->condition('b.entity_id', $nid, '=');		   
  $RbaseUrl = $baseUrl->execute();
  $FRbaseUrl = $RbaseUrl->fetch();
  
  $raw_url = $FRbaseUrl->field_base_url_value;
  $cid = urldecode($raw_url);
  
/* Mixpanel start*/
  $fullProdUrl = $cid;

  if(strpos($fullProdUrl,'?') > 1) {
    $prodUrl = reset(explode("?",$fullProdUrl));}
  else {
    $prodUrl = $fullProdUrl;
 }
  $retailerDomain = get_domain($fullProdUrl);
  $brand = reset(explode(".",$retailerDomain));
/*Mixpanel End */
  
  /******************************************************************/

	$jsonArray = @unserialize($FRProUrl->field_best_coupon_info_value);
	if ($jsonArray == false){
		$jsonArray = json_decode($FRProUrl->field_best_coupon_info_value);
	} 
  if (isset($jsonArray)) {
    global $base_root;
    $items = array();
    
    $type = 'ul';
    $attributes = array(
        'id' => 'coupon_search_listing',
        'class' => 'custom-coupon_search_listing',
    );
    $i = 0;
    $coupons = array();  
    foreach ($jsonArray as $key => $value) {	//url replaced by sanjay
      if (is_object($value)) {
        if ($value->Successful =="1") { 
          $is_success = false;
        }
        $i++;
        $value->counter = $i;
		$value->productPrice = $productPrice;
		$value->productName = $product_node->field_retailer_product_name['und']['0']['value'];
 /* PRINTING TITLE BASED ON WHETHER THE DOMAIN IS CUPONATION OR NOT*/
		$current_domain = get_current_domain();
	//	if ($current_domain == 'cuponation'){
		/*$query = new EntityFieldQuery();
		$query->entityCondition('entity_type', 'node')
			->entityCondition('bundle', 'retailer_coupon_page')
			->fieldCondition('field_retailer', 'tid', $product_node->field_retailer['und']['0']['tid'], '=')
			->fieldCondition('field_coupon_code', 'value', $value->couponCode, '=');
		$result = $query->execute();		
		$nids = array_keys($result['node']);
		$retailer_coupon = node_load($nids[0]);
		$cuponation_title = $retailer_coupon->field_cuponation_title['und']['0']['value'];
		$couponvoodoo_title = $retailer_coupon->title;*/
		$couponvoodoo_title=$couponvoodoo_title;
		if (!empty($result['node']) && !empty($couponvoodoo_title)){
			if ( $current_domain == 'cuponation' && !empty($cuponation_title)){
				$value->description = $cuponation_title;
			} Else{
				$value->description = $couponvoodoo_title;
			}
		}
/*		if ($current_domain == 'cuponation'){		
			$value->description = 'test'.$couponvoodoo_title;
			if (!empty($result['node']) && !empty($cuponation_title)) {
				$value->description = 'aaaa'.$cuponation_title;
			}
		}
*/
        $items[] = array(
            'data' => theme('coupons_result_page', array('row' => $value)),
            'id' => 'search_listing_li_row_' . $i,
            'class' => array('search_listing_row_li'),
        );
        $coupons['c_' . $i] = $value->couponCode;
	/* Mixpanel start*/
        $savings['c_' . $i] = $value->Saving;
	/* Mixpanel end*/
	}
}
/*

drupal_add_js(array('coupons' => $coupons, 'savings' => $savings, 'fullProdUrl' => $fullProdUrl, 'prodUrl' => $prodUrl, 'retailerDomain' => $retailerDomain, 'brand' => $brand), 'setting');

drupal_add_js("jQuery(document).ready(function($){
          $('.unlock_coupon').click(function(){
              var coupon_code = '';
              
              var c = jQuery(this).attr('rel');
	      
              for (var item in Drupal.settings.coupons) {
                if (item == c){
                  coupon_code = Drupal.settings.coupons[item];

	      saving = Drupal.settings.savings[item];
	      brand =  Drupal.settings.brand;
	      fullProdUrl =  Drupal.settings.fullProdUrl;
	      prodUrl =  Drupal.settings.prodUrl;
	      retailerDomain =  Drupal.settings.retailerDomain;


                }
              }

              $(this).html(coupon_code);
              $(this).addClass('copied_coupon')
              var url = $(this).attr('href')+'&c='+coupon_code;
			
			  $(this).attr('href',url);
			
			// BY ASHISH: COMMENTED OUT TO PREVENT MULTI CLICK - THIS IS A HACK NEED TO TAKE A RELOOK TO SEE WHERE THE URL IS OPENING FROM
			
			// var count = url.match(/&c/g).length;
			// console.log('count: '+count+'URL: '+url);
			//  if (count == '1') {
			//	console.log('inside: '+count);
			// window.open($(this).attr('href'));
			//}
			//else {console.log('else');return ;}
			return true;
          });
        });", array('type' => 'inline', 'scope' => 'footer'));


    drupal_add_js(drupal_get_path('theme', 'basic') . '/js/jquery.zclip.min.js');
    drupal_add_js(drupal_get_path('module', 'coupons') . '/coupons.js');
    $path = $base_url . "/" . drupal_get_path('theme', 'basic') . "/js/ZeroClipboard1.swf";
    drupal_add_js("jQuery(window).load(function($){
                     jQuery('.unlock_coupon').zclip({
                            path:'" . $path . "',
                            copy: function() {
                                  var c = jQuery(this).attr('rel');
                                  for (var item in Drupal.settings.coupons) {
                                    if (item == c){
                                      return Drupal.settings.coupons[item];
                                    }
                                  }
                              }
                       });
                });", array('type' => 'inline', 'scope' => 'footer'));


    if ($is_success) {
      $error_msg = '<div class="messages error">
                Sorry! We tried our best but no coupons work for your product. Here is a list of coupons we tried, please read the response field for each coupon, you maybe able to avail discounts by increasing your cart value or selecting anther product:
          </div>';
    } else {
    return '<span class="error">Bummer! Something went wrong. Please try another product.</span>';
  } 
*/
    return theme_item_list(array('items' => $items, 'title' => $title.$error_msg, 'type' => $type, 'attributes' => $attributes));
  }  
}

function coupons_copy_coupon_taxonomy($nid, $taxoType){
  
  if($taxoType == 4){
    $taxoType = 'brand';
  }elseif($taxoType == 3){
    $taxoType = 'cate';
  }elseif($taxoType == 2){
    $taxoType = 'ret';
  }
  
  $baseUrl = db_select('field_data_field_base_url', 'b')
		     ->fields('b', array('field_base_url_value') )
		     ->condition('b.entity_id', $nid, '=');		   
  $RbaseUrl = $baseUrl->execute();
  $FRbaseUrl = $RbaseUrl->fetch();
  
  $raw_url = $FRbaseUrl->field_base_url_value;
  /*******************************************************************/  
   
  $cid = urldecode($raw_url);
  
/* Mixpanel start*/
  $fullProdUrl = $cid;

  if(strpos($fullProdUrl,'?') > 1) {
    $prodUrl = reset(explode("?",$fullProdUrl));}
  else
    $prodUrl = $fullProdUrl;

  $retailerDomain = get_domain($fullProdUrl);
  $brand = reset(explode(".",$retailerDomain));
/*Mixpanel End */
  
  /******************************************************************/ 
    
  $node = node_load($nid);
  
  $BestCouponCodeStatus = 1;
  $bestSaving = $node->field_best_coupon_saving[und][0]['value'];
  $bestCouponCodeStatus = $node->field_best_coupon_status[und][0]['value'];  //successful  
  $bestCouponCode = $node->field_best_coupon_couponcode[und][0]['value'];
  $bestCouponDescription = $node->field_best_coupon_description[und][0]['value'];
  $bestCouponDomain = $retailerDomain;
  $bestCouponUrl = $node->field_best_coupon_url[und][0]['value'];
  
  $bestCouponValue = (object) array('BestCoupon' => $BestCouponCodeStatus,
			  'Saving' => $bestSaving,
			  'Successful' => $bestCouponCodeStatus,
			  'couponCode' => $bestCouponCode,
			  'description' => $bestCouponDescription,
			  'domain' => $bestCouponDomain,
			  'url' => $bestCouponUrl
			  );
  
  
    global $base_root;
    $items = array();
    
    $type = 'ul';
    $attributes = array(
        'id' => 'coupon_search_listing',
        'class' => 'custom-coupon_search_listing',
    );
    $coupons = array();  

      if (is_object($bestCouponValue)) {
        if ($bestCouponCodeStatus =="1") {
          $is_success = false;
        }
	$bestCouponValue->counter = $nid;
	
        $items[] = array(
            'data' => theme('coupons_taxonomy', array('row' => $bestCouponValue)),
            //'id' => 'search_listing_li_row_' . $i,
	    'id' => 'search_listing_li_row_' . $nid,
	    
            'class' => array('search_listing_row_li'),
        );
	$coupons['best_' . $nid] = $bestCouponValue->couponCode;
      /* Mixpanel start*/
	$savings['best_' . $nid] = $bestCouponValue->Saving;
      /* Mixpanel end*/
      }

    /* mixpanel */
drupal_add_js(array('coupons' => $coupons, 'savings' => $savings, 'fullProdUrl' => $fullProdUrl, 'prodUrl' => $prodUrl, 'retailerDomain' => $retailerDomain, 'brand' => $brand), 'setting');
    /* mixpanel */
drupal_add_js("jQuery(document).ready(function($){
          $('.unlock_coupon_$nid').click(function(){
	 
	      var coupon_code = '';
              var c = jQuery(this).attr('rel');	      
	      coupon_code = Drupal.settings.coupons.best_$nid;
	      
	      /*mixpanel*/
	      saving = Drupal.settings.savings.best_$nid;
	      brand =  Drupal.settings.brand;
	      fullProdUrl =  Drupal.settings.fullProdUrl;
	      prodUrl =  Drupal.settings.prodUrl;
	      retailerDomain =  Drupal.settings.retailerDomain;
	      /*mixpanel*/

              $(this).html(coupon_code);
              $(this).addClass('copied_coupon')
              var url = $(this).attr('href')+'&c='+coupon_code;
	      
              $(this).attr('href',url);
			  window.open($(this).attr('href'));
             return true;
          });
        });", array('type' => 'inline', 'scope' => 'footer'));


    drupal_add_js(drupal_get_path('theme', 'basic') . '/js/jquery.zclip.min.js');
    drupal_add_js(drupal_get_path('module', 'coupons') . '/coupons.js');
    $path = $base_url . "/" . drupal_get_path('theme', 'basic') . "/js/ZeroClipboard1.swf";
    drupal_add_js("jQuery(window).load(function($){
                     jQuery('.unlock_coupon').zclip({
                            path:'" . $path . "',
                            copy: function() {
                                var c = jQuery(this).attr('rel');
				return Drupal.settings.coupons.best_$nid;
                              }
                       });
                });", array('type' => 'inline', 'scope' => 'footer'));


    if ($is_success) {
      $error_msg = '<div class="messages error">
                Sorry! We tried our best but no coupons work for your product. Here is a list of coupons we tried, please read the response field for each coupon, you maybe able to avail discounts by increasing your cart value or selecting anther product:
          </div>';
    }
    //mail('sanjay.kumar1@mail.vinove.com', 'items', 'items-->'.print_r($items,1));
    return theme_item_list(array('items' => $items, 'title' => $title.$error_msg, 'type' => $type, 'attributes' => $attributes));
  /*} else {
    return '<span class="error">Bummer! Something went wrong. Please try another product.</span>';
  } */ 
}



//function coupons_views_query_alter(&$view, &$query) {

/* THIS CONTROLS THE RIGHT HAND SIDE SIMILAR PRODUCT WIDGET ON PRODUCT PAGE pARTS ARE COMMENTED SINCE 2 BLOCKS ON SAME PAGE CONFLICT*/
function coupons_views_pre_build(&$view) {
  
/* THIS POWERS MORE FROM BRAND WIDGET  
  if($view->current_display == 'block_3' &&  $view->name == 'apache_retailer_products' ) {
    $nid = arg(1);
    $node = node_load($nid);
  //  echo '===>'.$node->field_brand[und][0]['tid'];
    $view->display_handler->handlers['filter']['im_field_brand']->value = $node->field_brand[und][0]['tid'];
  }*/
/* THIS POWERS MORE FROM RETAILER WIDGET  */
/* 
 if($view->current_display == 'block' &&  $view->name == 'apache_retailer_products' ) {
    $nid = arg(1);
    $node = node_load($nid);
    $view->display_handler->handlers['filter']['im_field_retailer']->value = $node->field_retailer[und][0]['tid'];
  }
*/
/* THIS POWERS SIMILAR PRODUCTS - LOWER CASE IS IMPORTANT*/
 
  
  if($view->current_display == 'page' &&  $view->name == 'category_coupon_page' ) {
    $lastCheckTime = strtotime(date("j F Y"));
	//$view->display_handler->handlers['filter']['field_field_coupon_expiry_value']->value = $lastCheckTime;
  }
  if($view->current_display == 'page' &&  $view->name == 'brand_coupon_page' ) {
    $lastCheckTime = strtotime(date("j F Y"));
	//$view->display_handler->handlers['filter']['field_field_coupon_expiry_value']->value = $lastCheckTime;
  }
  if($view->current_display == 'page' &&  $view->name == 'retailer_coupon_page' ) {
    $lastCheckTime = strtotime(date("j F Y"));
	dpq($view->build_info['query']);
	//$view->display_handler->handlers['filter']['field_field_coupon_expiry_value']->value = $lastCheckTime;
  }
 
  if($view->current_display == 'block_4' &&  $view->name == 'apache_retailer_products' ) {
	$nid = arg(1);
	$node = node_load($nid);
	$current_time= time();
	$show_time=$current_time-(1.5*24*3600);
	$show_time=gmdate('Y-m-d\TH:i:s\Z', $show_time);
	$string = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	$string = str_replace(' ', '-', $string);
	$string = preg_replace('/[^A-Za-z0-9\-]/', '', $string);
	$string = str_replace('-', ' ', $string);
	//$view->display_handler->handlers['filter']['label']->value = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	$view->display_handler->handlers['filter']['label']->value = $string;
	$view->display_handler->handlers['filter']['im_field_category']->value = strip_tags($node->field_category['und']['0'][tid]);
//	$view->display_handler->handlers['filter']['dm_field_lastcheckedtime']->value = $show_time;
	 
	}
else if($view->current_display == 'block_5' &&  $view->name == 'apache_retailer_products' ) {
	$url=drupal_get_destination();
	$purl=$url['destination'];
	if (strpos($purl,'ccp') !== false) {
    $splitArr=explode("/",$purl);
	//mail('lavesh@theshoppingpro.com', 'purl',$purl );
	$alias='c/'.$splitArr[1].'-coupons';
	//mail('lavesh@theshoppingpro.com', 'alias',$alias );
	$path=drupal_lookup_path('source',$alias);
	//mail('lavesh@theshoppingpro.com', 'path',$path );
$tid = explode('/',$path);
//mail('lavesh@theshoppingpro.com', 'tid',$tid );
$tid1=$tid[2]; 
//mail('lavesh@theshoppingpro.com', 'tid1',$tid1 );

}
	$current_time= time();
	$show_time=$current_time-(1.5*24*3600);
	$show_time=gmdate('Y-m-d\TH:i:s\Z', $show_time);
	//$string = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$string = str_replace(' ', '-', $string);
	//$string = preg_replace('/[^A-Za-z0-9\-]/', '', $string);
	//$string = str_replace('-', ' ', $string);
	//$view->display_handler->handlers['filter']['label']->value = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$view->display_handler->handlers['filter']['label']->value = $string;
//	mail('team@theshoppingpro.com', 'test mail',$tid1 );
	$view->display_handler->handlers['filter']['im_field_category']->value = $tid1;
//	$view->display_handler->handlers['filter']['dm_field_lastcheckedtime']->value = $show_time;
	
	}
	
else if($view->current_display == 'block_6' &&  $view->name == 'apache_retailer_products' ) {
	$url=drupal_get_destination();
	$purl=$url['destination'];
	//mail('lavesh@theshoppingpro.com', 'purl',$purl );
	if (strpos($purl,'bcp') !== false) {
    $splitArr=explode("/",$purl);
	
	$alias='b/'.$splitArr[1].'-coupons';
	
	$path=drupal_lookup_path('source',$alias);
	
$tid = explode('/',$path);

$tid1=$tid[2]; 
}
	$current_time= time();
	$show_time=$current_time-(1.5*24*3600);
	$show_time=gmdate('Y-m-d\TH:i:s\Z', $show_time);
	//$string = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$string = str_replace(' ', '-', $string);
	//$string = preg_replace('/[^A-Za-z0-9\-]/', '', $string);
	//$string = str_replace('-', ' ', $string);
	//$view->display_handler->handlers['filter']['label']->value = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$view->display_handler->handlers['filter']['label']->value = $string;
//	mail('team@theshoppingpro.com', 'test mail',$purl.'-'.$catId );
	$view->display_handler->handlers['filter']['im_field_brand']->value = $tid1;
//	$view->display_handler->handlers['filter']['dm_field_lastcheckedtime']->value = $show_time;
	
	}
	
	else if($view->current_display == 'block_7' &&  $view->name == 'apache_retailer_products' ) {
	$url=drupal_get_destination();
	$purl=$url['destination'];
	if (strpos($purl,'rcp') !== false) {
    $splitArr=explode("/",$purl);
	$retailerName=$splitArr[1];
	//$retailer_name_base = str_replace('.com', "", $retailerName);
	//$retailer_name_base = ucfirst($retailer_name_base);
$Query=db_query('SELECT ttd.tid FROM {taxonomy_term_data} AS ttd WHERE ttd.vid = 2 and ttd.name = :retailer_name', array(':retailer_name' => $retailerName));
$Ruery = $Query->fetch();
$retailerId = $Ruery->tid;

	//mail('team@theshoppingpro.com', 'test mail',$retailer_name_base.'-'.$retailerId );
}
	$current_time= time();
	$show_time=$current_time-(1.5*24*3600);
	$show_time=gmdate('Y-m-d\TH:i:s\Z', $show_time);
	//$string = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$string = str_replace(' ', '-', $string);
	//$string = preg_replace('/[^A-Za-z0-9\-]/', '', $string);
	//$string = str_replace('-', ' ', $string);
	//$view->display_handler->handlers['filter']['label']->value = strtolower(strip_tags($node->field_retailer_product_name['und']['0']['value']));
	//$view->display_handler->handlers['filter']['label']->value = $string;
//	mail('team@theshoppingpro.com', 'test mail',$purl.'-'.$catId );
	$view->display_handler->handlers['filter']['im_field_retailer']->value = $retailerId;
//	$view->display_handler->handlers['filter']['dm_field_lastcheckedtime']->value = $show_time;
	
	}

	
}


function coupons_get_taxonomy_url($tid, $block = '') {
  if($block == 'block'){
    $termPath = taxonomy_term_load($tid); // load term object
    $term_uri = taxonomy_term_uri($termPath); // get array with path
    $term_title = taxonomy_term_title($termPath);
    $term_path = $term_uri['path'];
    $link = l($term_title,$term_path);
  }else{
    $termPath = taxonomy_term_load($tid); // load term object
    $term_uri = taxonomy_term_uri($termPath); // get array with path
    $term_title = substr( taxonomy_term_title($termPath) , 0, 30);
    $term_path = $term_uri['path'];
    $link = l($term_title,$term_path);
  }
  return $link;
}

/* BY ASHISH TO GET DOMAIN TO SIMPLIFY THE CONDITIONS*/
function get_current_domain(){
	global $base_url;
	if (stripos($base_url,'cuponation') != false){
		return 'cuponation';
	} else if (stripos($base_url,'offers.couponvoodoo') != false){
		return 'offers';
	}
	else {
	return 'couponvoodoo';
	}
}

/* BY ASHISH TO CHANGE STATIC CONTENT BASIS THE DOMAIN*/
function get_label($label) {
	$current_domain = get_current_domain ();
	if ($current_domain == 'cuponation'){
		switch ($label) {
			case "Status:":
				return 'Coupon Status:';
			break;
			case "List Price:":
				return 'Sale Price:';
			break;
			case "Savings:":
				return 'You Save:';
			break;
			case "Net Price:":
				return 'Final Cost:';
			break;
			case "Best Coupon:":
				return 'Coupon Details';
			break;
			case "Offer:":
				return 'Deal:';
			break;			
			case "MRP:":
				return 'Price:';
			break;			
			case "INR ":
				return 'Rs. ';
			break;		
			case "View Details":
				return 'See All Coupons';
			break;		
			case "Save INR ":
				return 'Get Rs. ';
			break;		
			case "Discount Found":
				return 'Savings';
			break;		
			case "Coupons Found":
				return 'Coupons';
			break;		
			case "No Discounts":
				return 'No Savings';
			break;		
			case "Data is more than 24hrs old: ":
				return 'Old Data: ';
			break;
			case "View More From ":
				return 'All Products By ';
			break;
			case "View All Tested Coupons For Product ":
				return 'See All Coupons';
			break;
			case "View All Tested Coupons For ":
				return 'See All Coupons For ';
			break;
			case "Results For All Coupons Of This Product":
				return 'All Coupons';
			break;
			case "Price History Of This Product":
				return 'Historical Pricing';
			break;	
			case "Coupon & Price History For ":
				return 'Past Price & Coupon Status of';
			break;	
			case "Best Coupon Or Discounts":
				return 'Best Deal';
			break;
			case "Description:":
				return 'Coupon:';
			break;
			case "Go":
				return 'View';
			break;
			case "Buy Now":
				return 'View';
			break;
			case "Never pay the listed price! Additional discounts via coupons are just a click away!":
				return 'Check for coupons with a single click! Could not be simpler now, could it!';
			break;
			
			case "This coupon helps you save ":
				return 'Now Save ';
			break;
			case " on ":
				return ' using this coupon when you buy ';
			break;
			case "This coupon does not work for your product":
				return 'Sorry! This coupon does not work on the selected product';
			break;
			default:
				return $label;
			}
	} else {
		switch (strtolower($label)) {
			default:
				return $label;	
		}
	}
}

function get_block_subject($block_subject) {
	$current_domain = get_current_domain ();
	if ($current_domain == 'cuponation'){
		switch ($block_subject) {
			case "Similar Products":
					return 'Cuponation Recommends';
			break;
			case "Only Show Products With:":
					return 'Filter by Coupon Status';
			break;
			case "Net Price (Post Coupons)":
					return 'Filter by Final Price';
			break;
			case "Savings":
					return 'Filter by Money Saved';
			break;
			case "Category":
					return 'Filter by Categories';
			break;
			case "Retailer":
					return 'Filter by Retailers';
			break;
			case "Brand":
					return 'Filter by Brands';
			break;			
			case "Quick Links - Top Categories":
					return 'Also See - Top Categories';
			break;
			case "Quick Links - Top Brands":
					return 'Also See - Top Brands';
			break;
			
			default:
				return $block_subject;
		}
	} else {
		switch (strtolower($block_subject)) {
			default:
				return $block_subject;
		}
	}
}

function coupons_cron() {

	$tables = array("predictorCompiledResultTable", "predictorCompiledResultTableAmazon", "predictorCompiledResultTableFlipkart", "predictorCompiledResultTableSnapdeal");
	
	for($x=0;$x<count($tables);$x++) {
	
	$table=$tables[$x];
	$update='Update_'.$table;
	/**																			**\
	* PROCESS HIGHLIGHT:
	* - GET ENTITY ID INTO PREDICTOR TABLE USING BASEURL
	* - CONVERT BRAND NAME TO BRAND ID IN PREDICTOR TABLE
	* - UPDATE VALUE OF LOCATION IN PREDICTOR TABLE (TO BE USED FOR SITEMAP)
	* - UPDATE APACHE SOLR CHANGE FREQ & LASTMOD
	* - UPDATE ALL NODE VALUE FIELDS ONE BY ONE INCLUDING SETTING NODE STATUS TO 1

	 
	\**																			**/
 
	$Query = db_select('1Variables', 'b')
				 ->fields('b', array('Status') )
				 ->condition('b.Variable', $update, '=');
	$run_check = $Query->execute();
	$run_check_fetch = $run_check->fetch();
	$run = $run_check_fetch->Status;
	
	

	If ($run == 1) {
		mail('lavesh@theshoppingpro.com', 'Update Node Script Start', gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600))));
		db_query("UPDATE coupon_finder.1Variables SET Status = 0, Ref_Value = '".gmdate('Y-m-d\TH:i:s\Z', time())."' WHERE Variable = '".$update."'");
		$result = "Start Time: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		echo "\n\n START - Entity Id Update \n\n".time();
		db_query("UPDATE coupon_finder.".$table." LEFT JOIN coupon_finder.field_data_field_base_url ON coupon_finder.field_data_field_base_url.field_base_url_value = coupon_finder.".$table.".BaseUrl SET coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_base_url.entity_id ");
		echo "\n\n END - Entity Id Update \n\n".time();
		$result = $result."Entity Update: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		echo "\n\n BRAND - GETTING TID FROM NAME \n\n".time();
		db_query("UPDATE coupon_finder.".$table." LEFT JOIN coupon_finder.taxonomy_term_data ON coupon_finder.taxonomy_term_data.name = coupon_finder.".$table.".Brand SET coupon_finder.".$table.".BrandId = coupon_finder.taxonomy_term_data.tid ");
		$result = $result."Brand Update: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		echo "\n\n UPDATE LOCATION FOR NODE \n\n".time();
		db_query ("UPDATE coupon_finder.".$table." SET coupon_finder.".$table.".loc = concat('node/',CAST(coupon_finder.".$table.".entity_id as CHAR(50))) ");
		echo "\n\n UPDATE LOCATION FOR BRAND \n\n".time();
		db_query ("UPDATE coupon_finder.".$table." SET coupon_finder.".$table.".Brand_Loc = concat('taxonomy/term/',CAST(coupon_finder.".$table.".BrandId as CHAR(50))) ");
		echo "\n\n UPDATE LOCATION FOR CATEGORY \n\n".time();
		db_query ("UPDATE coupon_finder.".$table." SET coupon_finder.".$table.".Category_Loc = concat('taxonomy/term/',CAST(coupon_finder.".$table.".Category as CHAR(50))) ");
		$result = $result."Location Update: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		// node sitemap update
		echo "\n\n XML SITEMAP - LAST MODIFIED \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.lastmod = ".(time()+(4.5*3600)));
		echo "\n\n XML SITEMAP - CHANGE FREQUENCY \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.changefreq = 86400 ");
		// brand sitemap update
		echo "\n\n XML SITEMAP - LAST MODIFIED \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".Brand_Loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.lastmod = ".(time()+(4.5*3600)));
		echo "\n\n XML SITEMAP - CHANGE FREQUENCY \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".Brand_Loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.changefreq = 86400 ");
		// category sitemap update
		echo "\n\n XML SITEMAP - LAST MODIFIED \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".Category_Loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.lastmod = ".(time()+(4.5*3600)));
		echo "\n\n XML SITEMAP - CHANGE FREQUENCY \n\n".time();
		db_query ("UPDATE coupon_finder.xmlsitemap INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".Category_Loc = coupon_finder.xmlsitemap.loc SET coupon_finder.xmlsitemap.changefreq = 86400 ");
		$result = $result."Sitemaps Updated: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		echo("\n\n CHANGED \n\n").time();
		db_query ("UPDATE coupon_finder.node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node.nid SET coupon_finder.node.changed = ".(time()+(4.5*3600)));

		// echo("\n\n TITLE \n\n").time();
		// db_query ("UPDATE coupon_finder.node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node.nid SET coupon_finder.node.title = coupon_finder.".$table.".pagetitle ");

		echo("\n\n STATUS \n\n").time();
		db_query ("UPDATE coupon_finder.node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node.nid SET coupon_finder.node.status = 1 ");

		echo("\n\n TIMESTAMP - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.node_revision INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node_revision.nid SET coupon_finder.node_revision.timestamp = ".time());

		// echo("\n\n TITLE - REVISION \n\n").time();
		// db_query ("UPDATE coupon_finder.node_revision INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node_revision.nid SET coupon_finder.node_revision.title = coupon_finder.".$table.".pagetitle ");

		echo("\n\n STATUS - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.node_revision INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.node_revision.nid SET coupon_finder.node_revision.status = 1 ");

		echo("\n\n FIELD_CATEGORY_TID \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_category INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_category.entity_id SET coupon_finder.field_data_field_category.field_category_tid = coupon_finder.".$table.".Category ");

		echo("\n\n FIELD_CATEGORY_TID - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_category INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_category.entity_id SET coupon_finder.field_revision_field_category.field_category_tid = coupon_finder.".$table.".Category ");

		echo("\n\n FIELD_PRODUCT_PRICE_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_product_price INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_product_price.entity_id SET coupon_finder.field_data_field_product_price.field_product_price_value = coupon_finder.".$table.".ListPrice ");

		echo("\n\n FIELD_PRODUCT_PRICE_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_product_price INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_product_price.entity_id SET coupon_finder.field_revision_field_product_price.field_product_price_value = coupon_finder.".$table.".ListPrice ");

		echo("\n\n FIELD_MRPPRODUCTPRICE_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_mrpproductprice INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_mrpproductprice.entity_id SET coupon_finder.field_data_field_mrpproductprice.field_mrpproductprice_value = coupon_finder.".$table.".MRP ");

		echo("\n\n FIELD_MRPPRODUCTPRICE_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_mrpproductprice INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_mrpproductprice.entity_id SET coupon_finder.field_revision_field_mrpproductprice.field_mrpproductprice_value = coupon_finder.".$table.".MRP ");

		echo("\n\n FIELD_RETAILER_PRODUCT_NAME_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_retailer_product_name INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_retailer_product_name.entity_id SET coupon_finder.field_data_field_retailer_product_name.field_retailer_product_name_value = coupon_finder.".$table.".ProductName ");

		echo("\n\n FIELD_RETAILER_PRODUCT_NAME_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_retailer_product_name INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_retailer_product_name.entity_id SET coupon_finder.field_revision_field_retailer_product_name.field_retailer_product_name_value = coupon_finder.".$table.".ProductName ");

		echo("\n\n FIELD_PRODUCT_IMAGE_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_product_image INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_product_image.entity_id SET coupon_finder.field_data_field_product_image.field_product_image_value = coupon_finder.".$table.".ProductImage ");

		echo("\n\n FIELD_PRODUCT_IMAGE_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_product_image INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_product_image.entity_id SET coupon_finder.field_revision_field_product_image.field_product_image_value = coupon_finder.".$table.".ProductImage ");

		echo("\n\n FIELD_BRAND_TID \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_brand INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_brand.entity_id SET coupon_finder.field_data_field_brand.field_brand_tid = coupon_finder.".$table.".BrandId ");

		echo("\n\n FIELD_BRAND_TID - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_brand INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_brand.entity_id SET coupon_finder.field_revision_field_brand.field_brand_tid = coupon_finder.".$table.".BrandId ");

		echo("\n\n FIELD_LASTCHECKEDTIME_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_lastcheckedtime INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_lastcheckedtime.entity_id SET coupon_finder.field_data_field_lastcheckedtime.field_lastcheckedtime_value = coupon_finder.".$table.".LastCheckTime ");

		echo("\n\n FIELD_LASTCHECKEDTIME_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_lastcheckedtime INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_lastcheckedtime.entity_id SET coupon_finder.field_revision_field_lastcheckedtime.field_lastcheckedtime_value = coupon_finder.".$table.".LastCheckTime ");

		echo("\n\n FIELD_AFFILIATEURL_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_affiliateurl INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_affiliateurl.entity_id SET coupon_finder.field_data_field_affiliateurl.field_affiliateurl_value = coupon_finder.".$table.".BaseUrl ");

		echo("\n\n FIELD_AFFILIATEURL_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_affiliateurl INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_affiliateurl.entity_id SET coupon_finder.field_revision_field_affiliateurl.field_affiliateurl_value = coupon_finder.".$table.".BaseUrl ");

		echo("\n\n BODY_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_body INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_body.entity_id SET coupon_finder.field_data_body.body_value = coupon_finder.".$table.".ProductName ");

		echo("\n\n BODY_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_body INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_body.entity_id SET coupon_finder.field_revision_body.body_value = coupon_finder.".$table.".ProductName ");

		echo("\n\n FIELD_BEST_COUPON_COUPONCODE_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_couponcode INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_couponcode.entity_id SET coupon_finder.field_data_field_best_coupon_couponcode.field_best_coupon_couponcode_value = coupon_finder.".$table.".BestCouponCode ");

		echo("\n\n FIELD_BEST_COUPON_COUPONCODE_VALUE - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_couponcode INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_couponcode.entity_id SET coupon_finder.field_revision_field_best_coupon_couponcode.field_best_coupon_couponcode_value = coupon_finder.".$table.".BestCouponCode ");

		echo("\n\n FIELD_BEST_COUPON_DESCRIPTION_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_description INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_description.entity_id SET coupon_finder.field_data_field_best_coupon_description.field_best_coupon_description_value = coupon_finder.".$table.".BestCouponDesc ");

		echo("\n\n FIELD_BEST_COUPON_DESCRIPTION_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_description INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_description.entity_id SET coupon_finder.field_revision_field_best_coupon_description.field_best_coupon_description_value = coupon_finder.".$table.".BestCouponDesc ");

		echo("\n\n FIELD_BEST_COUPON_SAVING_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_saving INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_saving.entity_id SET coupon_finder.field_data_field_best_coupon_saving.field_best_coupon_saving_value = coupon_finder.".$table.".Saving ");

		echo("\n\n FIELD_BEST_COUPON_SAVING_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_saving INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_saving.entity_id SET coupon_finder.field_revision_field_best_coupon_saving.field_best_coupon_saving_value = coupon_finder.".$table.".Saving ");

		echo("\n\n FIELD_BEST_COUPON_NETPRICEAFTERS_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_netpriceafters INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_netpriceafters.entity_id SET coupon_finder.field_data_field_best_coupon_netpriceafters.field_best_coupon_netpriceafters_value = coupon_finder.".$table.".NetPrice ");

		echo("\n\n FIELD_BEST_COUPON_NETPRICEAFTERS_VALUE  - REVISION \n\n".time());
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_netpriceafters INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_netpriceafters.entity_id SET coupon_finder.field_revision_field_best_coupon_netpriceafters.field_best_coupon_netpriceafters_value = coupon_finder.".$table.".NetPrice ");

		echo("\n\n FIELD_BEST_COUPON_STATUS_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_status INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_status.entity_id SET coupon_finder.field_data_field_best_coupon_status.field_best_coupon_status_value = coupon_finder.".$table.".BestCouponStatus ");

		echo("\n\n FIELD_BEST_COUPON_STATUS_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_status INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_status.entity_id SET coupon_finder.field_revision_field_best_coupon_status.field_best_coupon_status_value = coupon_finder.".$table.".BestCouponStatus");

		echo("\n\n FIELD_BEST_COUPON_STATUS_DISPLAY_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_status_display INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_status_display.entity_id SET coupon_finder.field_data_field_best_coupon_status_display.field_best_coupon_status_display_value = coupon_finder.".$table.".BestCouponDisplay ");

		echo("\n\n FIELD_BEST_COUPON_STATUS_DISPLAY_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_status_display INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_status_display.entity_id SET coupon_finder.field_revision_field_best_coupon_status_display.field_best_coupon_status_display_value = coupon_finder.".$table.".BestCouponDisplay");

		echo("\n\n FIELD_BEST_COUPON_URL_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_url INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_url.entity_id SET coupon_finder.field_data_field_best_coupon_url.field_best_coupon_url_value = coupon_finder.".$table.".BaseUrl ");

		echo("\n\n FIELD_BEST_COUPON_URL_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_url INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_url.entity_id SET coupon_finder.field_revision_field_best_coupon_url.field_best_coupon_url_value = coupon_finder.".$table.".BaseUrl ");

		echo("\n\n field_data_field_retailer \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_retailer INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_retailer.entity_id SET coupon_finder.field_data_field_retailer.field_retailer_tid   = coupon_finder.".$table.".RetailerId");

		echo("\n\n field_data_field_retailer - revision \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_retailer INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_retailer.entity_id SET coupon_finder.field_revision_field_retailer.field_retailer_tid   = coupon_finder.".$table.".RetailerId");
	
		$result = $result."All Fields Except All COupon Info : ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
	
		echo("\n\n FIELD_BEST_COUPON_INFO_VALUE \n\n").time();
		db_query ("UPDATE coupon_finder.field_data_field_best_coupon_info INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_data_field_best_coupon_info.entity_id SET coupon_finder.field_data_field_best_coupon_info.field_best_coupon_info_value = coupon_finder.".$table.".Result ");
		
		$result = $result."All Coupon Info  : ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		
		echo("\n\n FIELD_BEST_COUPON_INFO_VALUE  - REVISION \n\n").time();
		db_query ("UPDATE coupon_finder.field_revision_field_best_coupon_info INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.field_revision_field_best_coupon_info.entity_id SET coupon_finder.field_revision_field_best_coupon_info.field_best_coupon_info_value = coupon_finder.".$table.".Result ");

		$result = $result."All Coupon Info  Revision : ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";

		echo("\n\n FLUSH ALL CACHE \n\n").time();
		//cache_clear_all();
		drupal_flush_all_caches();
		varnish_purge_all_pages();

		echo "\n\n APACHE SOLR - STATUS \n\n".time();
		db_query ("UPDATE coupon_finder.apachesolr_index_entities_node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.apachesolr_index_entities_node.entity_id SET coupon_finder.apachesolr_index_entities_node.status = 1 ");

		echo "\n\n APACHE SOLR - CHANGED \n\n".time();
		db_query ("UPDATE coupon_finder.apachesolr_index_entities_node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.apachesolr_index_entities_node.entity_id SET coupon_finder.apachesolr_index_entities_node.changed = ".(time()+(4.5*3600)));
		//db_query ("UPDATE coupon_finder.apachesolr_index_entities_node INNER JOIN coupon_finder.".$table." ON coupon_finder.".$table.".entity_id = coupon_finder.apachesolr_index_entities_node.entity_id SET coupon_finder.apachesolr_index_entities_node.changed = 1402131957");
		echo("\n\n FINISHED \n\n").time();
		$result = $result."All Data Updated: ".gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600)))."\n\n";
		$myntra_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 8 and entity_id is not null")->fetchField();
		$jabong_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 5 and entity_id is not null")->fetchField();
		$flipkart_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 13419 and entity_id is not null")->fetchField();
		$firstcry_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 3 and entity_id is not null")->fetchField();
		$amazon_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 14782 and entity_id is not null")->fetchField();
		$fabfurnish_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 14792 and entity_id is not null")->fetchField();
		$zovi_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 14785 and entity_id is not null")->fetchField();
		$zivame_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE RetailerId = 14786 and entity_id is not null")->fetchField();
		$all_count = db_query("SELECT count(*) FROM  coupon_finder.".$table."")->fetchField();
		$result = $result."Jabong Count: ".$jabong_count."\n\n";
		$result = $result."Myntra Count: ".$myntra_count."\n\n";
		$result = $result."Flipkart Count: ".$flipkart_count."\n\n";
		$result = $result."Firstcry Count: ".$firstcry_count."\n\n";
		$result = $result."Amazon Count: ".$amazon_count."\n\n";
		$result = $result."Fabfurnish Count: ".$fabfurnish_count."\n\n";
		$result = $result."zovi Count: ".$zovi_count."\n\n";
		$result = $result."zivame Count: ".$zivame_count."\n\n";
		$result = $result."All Count: ".$all_count."\n\n"; 
		$null_count = db_query("SELECT count(*) FROM  coupon_finder.".$table." WHERE entity_id is null")->fetchField();
		$result = $result."Null entity_id count: ".$null_count."\n\n";
		mail('lavesh@theshoppingpro.com', 'Update Node Script End', $result);	
		db_query("UPDATE coupon_finder.1Variables SET Status = 0, Ref_Value = '".gmdate('Y-m-d\TH:i:s\Z', time())."' WHERE Variable = 'Update_Node_Script'");
	} Else {
		//mail('team@theshoppingpro.com', 'Update Node Script Was Not Run', gmdate('Y-m-d\TH:i:s\Z', (time()+(5.5*3600))));  
	}
	}
 
}

/**
 * Implements hook_metatag_metatags_view_alter
 * Currently used for modifying rel = canonical of a noindexednode to the kept nid 
 * commented out till a final call is taken on this
 */
function coupons_metatag_metatags_view_alter(&$output, $instance) {
/*
	global $base_url;
	$node = node_load(arg(1));
	if ($node->field_no_index['und']['0']['value'] == 1 || arg(0) == 'search'){
		$kept_nid = db_query("SELECT Kept_NID FROM  no_index_results WHERE Modified_NID = ".arg(1))->fetchField();
		$output['canonical']['#attached']['drupal_add_html_head'][0][0]['#value'] = $base_url.'/'.drupal_get_path_alias('node/'.$kept_nid);
	}
*/
}

/**
 * Implements hook_apachesolr_search_page_alter
 * @param array $build
 * @param array $search_page
 */
function coupons_apachesolr_search_page_alter(array &$build, array $search_page) {
    // Need to see, "$build['search_results']['#results']" should come as blank / empty
  if (!$build['search_results']['#results']) {
    drupal_add_html_head(array('#tag' => 'meta', '#attributes' => array('name' => 'robots', 'content' => 'noindex, nofollow')), 'coupons_apachesolr_noresult_metatag');
  }
}

//function array_column($array, $column){
//    $a2 = array();
//    array_map(function ($a1) use ($column, &$a2){
//        array_push($a2, $a1[$column]);
//    }, $array);
//    return $a2;
//}

function taxonomy_get_nested_tree($terms = array(), $max_depth = NULL, $parent = 0, $parents_index = array(), $depth = 0) {
  if (is_int($terms)) {
	$terms = taxonomy_get_tree($terms);
  }
  foreach($terms as $term) {
	foreach($term->parents as $term_parent) {
	  if ($term_parent == $parent) {
		$return[$term->tid] = $term;
	  }
	  else {
		$parents_index[$term_parent][$term->tid] = $term;
	  }
	}
  }
  foreach($return as &$term) {
	if (isset($parents_index[$term->tid]) && (is_null($max_depth) || $depth < $max_depth)) {
	  $term->children = taxonomy_get_nested_tree($parents_index[$term->tid], $max_depth, $term->tid, $parents_index, $depth + 1);
	}
  }
  return $return;
}



function coupon_pie_category_json($tree, $taxonomy_list, $original_term_name, $facet, $vid) {
	if (count($tree)) {
		$taxonomy_list_keys = array_keys($taxonomy_list);
		// $output = '<ul class="taxonomy-tree">';
		//$output .='"category": [{';
		foreach ($tree as $term) {
			
			$color = '25ade3';
			
			$parent = taxonomy_get_parents($term['tid']);
			if (empty($parent)){
				$color = coupon_pie_color($term['tid'], $vid);
				$alpha = 100;
				$parent_name = "";
			} else {
				$parent_key = array_keys($parent);
				$color = coupon_pie_color($parent_key[0], $vid);
				$alpha = 75;
				$parent = json_decode(drupal_json_encode($parent),true);
				$parent_name = $parent[$parent_key[0]]['name'];
			}
	
			if (in_array($term['tid'],$taxonomy_list_keys)){ 
				$value =  $taxonomy_list[$term['tid']]; 
				$name = $term['name'];
				$current_tid = $term['tid'];
				$tooltext = 'Click to view '.$value.' '.$original_term_name.' '.$parent_name.' '.$name.' products with coupons';
				if (!empty($term['children'])) {
						$output .='{';
						$output .= coupon_pie_json_element($name, $current_tid, $value, $color,$alpha, $tooltext, $original_term_name, $facet); 
						$output .=',"category": [';
						//$output .= $term['name'];
						$output .= coupon_pie_category_json($term['children'], $taxonomy_list, $original_term_name, $facet, $vid);
						$output .= '],';
						$output .= '},';
				} else {
						$output .='{';
						$output .= coupon_pie_json_element($name, $current_tid, $value, $color, $alpha, $tooltext, $original_term_name,$facet); 
						//$output .= $term['name'];
						$output .= '},';
				}
				
			}
		}
		//$output .= '</ul>';
		// $output .= '}],';
	}
	return $output;
}

function coupon_pie_json_element($name, $current_tid, $value, $color, $alpha, $tooltext, $original_term_name, $facet){
	global $base_url;
	$label = $name.' ('.$value.')';
	$label = str_replace(" ","{br}",$label);
	$name_url = str_replace(" ","-",strtolower($original_term_name));
	$link = $base_url.'/b/'.$name_url.'-coupons?f[0]='.$facet.':'.$current_tid;
	$element = '"label": "'.$label.'", "value": "30", "color": "'.$color.'", "alpha": "'.$alpha.'", "tooltext": "'.$tooltext.'", "link": "'.$link.'"';
	return $element;
}


/*** DESCRIPTION OF TERMS ******
 $facet: Facet for search on solr e.g. im_field_category - this is the field that will show up on the graph
 $vid: vocabulary of the facet
 $depth: how many levels do we want to plot, normally 1
 $query field: this is the taxonomy type for which the query will be fired e.g. im_field_brand to create field n brand page
 $tid: the id of teh taxonomy on which we are creating the graph
 $original_term_name: Name of the taxonomy term
 $best_coupon_status: 1 to show only coupon products anything else to show all product
 ********************************/
function coupon_pie_create_graph($facet, $vid, $query_field, $tid, $depth, $original_term_name, $best_coupon_status, $chart_type){
	global $base_url;
	$taxonomy_list = get_solr_data($facet, $query_field, $tid, $best_coupon_status); // this gets the solr result 
	if (sizeof($taxonomy_list) > 4) {
		drupal_add_js($base_url.'/sites/all/libraries/Fusioncharts/FusionCharts.js');
		$tree= json_decode(drupal_json_encode(taxonomy_get_nested_tree($vid,$depth)),true); // this gets the nested tree for category making tid a number
		$coupon_pie_json=coupon_pie_category_json($tree, $taxonomy_list, $original_term_name, $facet, $vid); // this is the final output string
		$coupon_pie_json = ',"category": ['.$coupon_pie_json.']';
		$coupon_pie_json = str_replace(",}","}",$coupon_pie_json);
		$coupon_pie_json = str_replace(",]","]",$coupon_pie_json);
		$coupon_pie_json = '
					{
					  "chart": {
						"caption": "QUICK COUPON VIEWER",
						"subcaption": "All '.$original_term_name.' Categories That Have Coupons Are Shown Below {br} Click on a Category Name to View Products",
						"bgcolor": "FFFFFF",
						"pieborderthickness": "1",
						"piebordercolor": "FFFFFF",
						"usehovercolor": "1",
						"hoverfillcolor": "800000",
						"showlabels": "1",
						"showvalue": "1",
						"showvalueintooltip": "1",
						"basefontcolor": "FFFFFF",
						"captionPadding": "0",
						"chartTopMargin":"5",
						"showborder": "0"					
					  },
					  "category": [
						{
						  "label": "'.$original_term_name.'{br}Products{br}With{br}Coupons",
						  "color": "800000",
						  "alpha": "100"
						'.$coupon_pie_json.'
					  }],				  
					  "styles": {
						"definition": [
						  {
							"name": "CaptionFont",
							"type": "font",
							"size": "16",
							"color": "999999"
						  },
						  {
							"name": "SubCaptionFont",
							"type": "font",
							"size": "12",
							"color": "999999"
						  },
						  {
							"name": "ToolTip",
							"type": "font",
							"size": "10",
							"color": "999999"
						  }
						],
						"application": [
						  {
							"toobject": "CAPTION",
							"styles": "CaptionFont"
						  },
						  {
							"toobject": "TOOLTIP",
							"styles": "ToolTip"
						  },
						  {
							"toobject": "SUBCAPTION",
							"styles": "SubCaptionFont"
						  }
						]
					  }
					}
				';
		
		drupal_add_js(array('coupon_pie_json' => array('coupon_pie_json_js' => $coupon_pie_json)), array('type' => 'setting'));
		drupal_add_js("jQuery(window).load(function(){
				var myChart = new FusionCharts( '".$chart_type."', 'Coupon Pie Chart', '100%', '500', '1' );
				myChart.setJSONData(Drupal.settings.coupon_pie_json.coupon_pie_json_js);
				myChart.render('coupon_pie_chart');
			});", array('type' => 'inline', 'scope' => 'footer'));
		}
}
function get_solr_data($facet, $query_field, $tid, $best_coupon_status){
		$time=time()-(72*3600);
		$time=gmdate('Y-m-d\TH:i:s\Z', $time);
		if ($best_coupon_status == 1){
			$query = 'q=*:*&version=2.2&start=0&rows=0&indent=on&facet=true&facet.field='.$facet.'&facet.mincount=1&fq=dm_field_lastcheckedtime:['.$time.' TO *] AND '.$query_field.':'.$tid.' AND its_field_best_coupon_status:1';
		} else {
			$query = 'q=*:*&version=2.2&start=0&rows=0&indent=on&facet=true&facet.field='.$facet.'&facet.mincount=1&fq=dm_field_lastcheckedtime:['.$time.' TO *] AND '.$query_field.':'.$tid;
		}
		$query = urlencode($query);
		$url = 'http://plugin.theshoppingpro.com/cpnvodo/api/productDetailsByBrand.php?query='.$query;
		$json = drupal_http_request($url, array('timeout' => 1200.0));
		$json = json_decode($json->data,true);
		return $json;
}

function coupon_pie_color($tid, $vid) {

	switch ($vid) {
		case "2":
			switch ($tid) {
				default:
					return '25ade3';
			}
		break;
		case "3":
			switch ($tid) {
				case "24":
					return '25ade3';
				break;				
				case "46":
					return 'f7971c';
				break;
				case "66":
					return '009933';
				break;
				case "74":
					return 'CC00CC';
				break;
				case "13":
					return 'CC6600';
				break;
				case "84":
					return 'CC9900';
				break;
				case "7400":
					return '999966';
				break;				
				default:
					return '25ade3';
			}		break;
		case "4":
			switch ($tid) {
				default:
					return '25ade3';
			}		break;
		default:
			return '25ade3';	

	}
}

function coupon_details_popup(){
	return theme('coupon_details_popup');
}
/****** CREATES THE URL FOR THE COUPON DETAILS POP UP ************/
function coupon_popup_url($couponcode, $coupon_redirect_path){
global $base_url;
return $base_url.'/coupon-details-popup?pop=1&coupon_code='.rawurlencode($couponcode).'&redirect_path='.rawurlencode($coupon_redirect_path);
}

/****** CREATES THE URL FOR THE PRODUCT PAGE THAT WILL SHOW THE COUPON DETAILS POP UP ************/
function coupon_popup_product_url($couponcode, $coupon_redirect_path){
	global $base_url;
	$current_path = drupal_get_path_alias();
	if (strpos($current_path,"?") == false) {
		return $base_url.'/'.$current_path.'?showpop=1&coupon_code='.rawurlencode($couponcode).'&redirect_path='.rawurlencode($coupon_redirect_path);
	} else {
		return $base_url.'/'.$current_path.'&showpop=1&coupon_code='.rawurlencode($couponcode).'&redirect_path='.rawurlencode($coupon_redirect_path);
	}	
}

/**
 * Implements hook_apachesolr_process_results to track search
 * Currently been done via block on live site
 */
/*
function coupons_apachesolr_process_results(array &$results, DrupalSolrQueryInterface $query) {
    if (isset($_SESSION['CvGa'])) {
		// EVENT TRACKING FOR SEARCH
		drupal_add_js(array('ga_search' => array(			
				'keyword' => $_SESSION['CvGa']['url']
			)), array('type' => 'setting'));
		if($_SESSION['CvGa']['urlStatus'] == 0) {
			drupal_add_js("jQuery(window).load(function(){
				ga('send', 'event', 'site-search', 'keyword', Drupal.settings.ga_search.keyword);
			});", array('type' => 'inline', 'scope' => 'footer'));
		} else {	
			drupal_add_js("jQuery(window).load(function(){
				ga('send', 'event', 'site-search', 'url', Drupal.settings.ga_search.keyword);
			});", array('type' => 'inline', 'scope' => 'footer'));	
		}
		unset($_SESSION['CvGa']);
    }
}

*/


function coupons_finder_form_for_taxonomy($form, &$form_state) {
  if ($GLOBALS['_domain']['subdomain'] != 'offers.couponvoodoo.com') {
    return array();
  }
  $form['title'] = array(
      '#title' => '',
      '#type' => 'textfield',
      '#size' => 100,
      '#attributes' => array('placeholder' => t('Search for store, brand or category e.g. Jabong, Adidas, Watches')),
      '#maxlength' => 255,
      '#label_display' => 'hidden',
  );

  $form['actions']['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Find My Coupons'),
      '#prefix' => '<div class="submit">',
      '#suffix' => '</div>',
  );
  return $form;
}

function coupons_finder_form_for_taxonomy_validate($form, &$form_state) {
  
}

function coupons_finder_form_for_taxonomy_submit($form, &$form_state) {
  $keyword = $form_state['values']['title'];
  $result = db_query("SELECT * FROM {taxonomy_term_data} ttd WHERE vid = 2 AND name LIKE :keyword ORDER BY name, tid LIMIT 1", array(':keyword' => $keyword . '%'))->fetch();
  if (!$result->vid) {
    $result = db_query("SELECT * FROM {taxonomy_term_data} ttd WHERE vid = 3 AND name LIKE :keyword ORDER BY name, tid LIMIT 1", array(':keyword' => $keyword . '%'))->fetch();
  }
  if (!$result->vid) {
    $result = db_query("SELECT * FROM {taxonomy_term_data} ttd WHERE vid = 4 AND name LIKE :keyword ORDER BY name, tid LIMIT 1", array(':keyword' => $keyword . '%'))->fetch();
  }
  if (!$result->vid || $keyword='' || empty($keyword)) {
  drupal_goto('http://offers.couponvoodoo.com/content/no-results-found');
  }
  switch($result->vid) {
    case 2://Retailer
      drupal_goto('rcp/'.trim($result->name).'/coupons-offers');
      break;
    case 3://Categories
	  $alias= drupal_lookup_path('alias',$result->tid) ;
	  //$name=explode('/',$alias);trim(str_replace('-coupons','',$name[1]));
	  
      drupal_goto('ccp/'.$alias.'/coupons-offers');      
      break;
    case 4://Brand
	$alias= drupal_lookup_path('alias',$result->tid) ;
	  $name=explode('/',$alias);
	  
      drupal_goto('bcp/'.trim(str_replace('-coupons','',$name[1])).'/coupons-offers');      
      break;
  }
}