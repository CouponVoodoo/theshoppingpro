<?php
/* CREATING AN API FOR UPDATE OF RETAILER COUPON NODES*/
function category_coupon_menu() {
  $items = array();
  $items['add-cat-coupon/%'] = array(//this creates a URL that will call this form at "examples/form-example"
      'title' => 'Add Coupons in database', //page title
      'page callback' => 'category_coupon_addcoupon', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
      'page arguments' => array(1),
      'access callback' => TRUE
  ); 

  return $items;
}


/* FUNCTION THAT THE RETAILER API CALLS TO CREATE / UPDATE  REATILER COUPON*/
function category_coupon_addcoupon($CouponInfo){
//$retailer = reset(explode('_',$_REQUEST['retailer']));
//$retailer = reset(explode('_',$urlParam));
	$url = "http://54.243.150.171/cpnVodo/nodecreation/catCpnPageNct.php"; //The API TO GET ALL RETAILER COUPON DATA 
	$json = drupal_http_request($url, array('timeout' => 600.0));
   	$json = $json->data;
    $jsonArr = json_decode($json,true);
	echo 'Array Size ------->'.sizeof($jsonArr);
	// LOOP TO PROCESS EACH RETAILER COUPON RECORD RECEIVED VIA THE API
	foreach($jsonArr as $json){ 
		$json = json_encode($json); 
    	$jsonData = preg_replace("/[\\n\\r]+/", " ", $json);
    	$jsonArray = json_decode($jsonData);
		// var_dump($json);
    	// ASSIGN ALL COUPON DATA TO VARIABLES
		$couponInfo = $jsonArray->couponInfo;
		$retailer = trim($couponInfo->Retailer);
    	$retailerId = trim($couponInfo->RetailerId);
    	$lastCheckedTime = trim($couponInfo->LastCheckedTime);
    	$couponCode = trim($couponInfo->CouponCode);
    	$couponTitle = trim($couponInfo->CouponTitle);
    	$couponCodeDesc = trim($couponInfo->CouponCodeDesc);
    	$status = trim($couponInfo->Status);
    	$weight = trim($couponInfo->weight);
		$catUrl = trim($couponInfo->CategoryUrl);
		$catID = trim($couponInfo->CategoryId);
		
		//CHECK IF NODE EXISTS (INCASE OF COUPONS CHECK VIA COUPON CODE AND RETAILER ID ELSE VIA COUPON TITLE AND RETAILER ID
		//echo "offer type: ".$offerType;
		
		$query = new EntityFieldQuery();
		$query->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'category_coupon')
		->fieldCondition('field_category', 'tid', $catID, '=')
		->fieldCondition('field_coupon_code', 'value', $couponCode, '=');
		// ->fieldCondition('field_coupon_title', 'value', $couponTitle, '='); // ENSURING COUPON IS UNIQUE THIS MEANS THAT LAST INSTANCE OF THE COUPON WILL GO LIVE - RECHECK IF THATS OK
		
		$result = $query->execute();
		$nids = array_keys($result['node']);
		 var_dump($nids); //COMMENT THIS POST TEXTING
		// echo $nids[0]; // COMMENT THIS POST TESTING
	  
	  
    	if (empty($result['node'])) {
			// CREATING NODE SINCE IT DOES NOT EXIST	
			$node = new stdClass();
			echo 'inside new';			
	        $node->language = 'und';
			$node->type     = 'category_coupon';
			$node->uid      = 1; 
		}
		else {
			// LOADING THE IDENTIFIED NODE & DELETING ALL CATEGORY LINK VALUES
			echo 'inside update';
			var_dump($nids[0]);
			$node = node_load($nids[0]);
			
		}
		// COMMON PROCESS FOR UPDATE AND NEW NODE SINCE NODE IS NOW IDENTIFIED / CREATED
		// PUSHING IN MAIN DATA (I.E. ALL EXCEPT CATEGORY LINKS) 
		$node->title = $couponTitle.' @ '.ucfirst($retailer);
		$node->body = $couponTitle.' @ '.$retailer;
		$node->field_baseurl_coupon['und']['0']['value']			= $catUrl;
		$node->field_retailer['und'][0][tid]			= $retailerId;
		$node->field_coupon_code['und']['0']['value']			= $couponCode;
		
		$node->field_coupon_title['und']['0']['value']			= $couponTitle;
		
		$node->field_coupon_description['und']['0']['value']			= $couponCodeDesc;
		$node->field_affiliate_url['und']['0']['value']			= $catUrl;
		$node->field_weight['und']['0']['value']			= $weight;
		$node->field_status['und']['0']['value']			= $status;
		$node->field_category['und'][0][tid]			= $catID; 
		// PUSHING IN CATEGORY LINKS 
				
    		 
		node_save($node);
		echo 'node saved';
    }
echo 'No node to process';
}
?>